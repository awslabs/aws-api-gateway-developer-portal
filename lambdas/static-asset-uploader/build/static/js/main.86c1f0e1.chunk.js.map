{"version":3,"sources":["services/get-fragments.jsx","services/api.js","pages/Home.jsx","pages/GettingStarted.jsx","services/state.js","services/api-catalog.js","services/self.js","services/misc.js","pages/Dashboard.jsx","components/Sidebar/Sidebar.jsx","components/Sidebar/SidebarHeader.jsx","components/MenuLink.jsx","components/ApisMenu.jsx","components/Modal.jsx","components/AlertPopup.jsx","components/GetSdk.jsx","components/SwaggerUiLayout.jsx","components/PageWithSidebar.jsx","pages/Apis.jsx","components/MessageList.jsx","services/accounts.js","components/Admin/Accounts/AccountsTable.jsx","components/Admin/Accounts/AccountsTableColumns.jsx","pages/Admin/Accounts/RegisteredAccounts.jsx","pages/Admin/Accounts/AdminAccounts.jsx","utils/use-boolean.jsx","pages/Admin/Accounts/PendingInvites.jsx","pages/Admin/Admin.jsx","pages/Admin/SideNav.jsx","pages/Admin/ApiManagement.jsx","components/NavBar.jsx","components/Feedback.jsx","services/feedback.js","utils/search-term-regexp.js","components/ApiSearch.jsx","index.js","components/Admin/Accounts/AccountsTable.module.css"],"names":["fragments","observable","loadHtml","path","fragment","jsx","window","fetch","then","response","text","parsedMarkdown","frontmatter","html","marked","body","headerPrefix","silent","ShowHTML","attributes","ref","useRef","useLayoutEffect","mountPoints","links","current","getElementsByTagName","i","length","link","test","href","target","rel","span","document","createElement","style","setProperty","ReactDOM","render","Link","to","dangerouslySetInnerHTML","__html","innerHTML","replaceWith","push","forEach","elem","cachedClient","cachedClientWithCredentials","HomePage","observer","Segment","vertical","textAlign","color","backgroundColor","padding","margin","Image","centered","size","src","Header","as","Home","header","tagline","data-testid","Button","positive","gettingStartedButton","apiListButton","Container","fluid","GettingStarted","awsRegion","_","get","cognitoRegion","cognitoUserPoolId","cognitoIdentityPoolId","cognitoClientId","cognitoDomain","initApiGatewayClient","accessKeyId","secretAccessKey","sessionToken","apigClientFactory","newClient","accessKey","secretKey","region","apigw","apiGatewayClient","Promise","resolve","poller","setInterval","clearInterval","apiGatewayClientWithCredentials","AWS","config","store","api","undefined","apiKey","apiKeyFetchFailed","apiList","loaded","apiGateway","generic","user","idToken","usagePlans","subscriptions","notifications","visibility","initialize","Object","assign","this","clear","reset","defaults","keys","key","set","resetUserData","reactTo","triggerFn","effectFn","reaction","data","action","usagePlan","usagePlanId","subscribed","id","find","sub","apis","updateSubscriptionStatus","concat","logo","apiStage","apiId","specificLogo","headers","Accept","redirect","ok","fetchApiImage","logoutTimer","isAuthenticated","getPreferredRole","jwtDecode","isRegistered","role","includes","isAdmin","getRemainingSessionTime","exp","Date","now","login","reject","location","hash","replace","split","map","param","localStorage","setItem","setTimeout","logout","setCredentials","error","catalogPromiseCache","subscriptionsPromiseCache","apiKeyPromiseCache","preferredRole","params","IdentityPoolId","Logins","RoleArn","credentials","CognitoIdentityCredentials","refresh","console","email","bustCache","promises","updateUsagePlansAndApisList","updateSubscriptions","updateApiKey","updateVisibility","all","updateAllUserData","post","clearTimeout","redirectUrl","protocol","host","getApiGatewayApisFromUsagePlans","catch","reduce","acc","cloneDeep","getApi","selectIt","stage","cacheBust","thisApi","allApis","toString","app","subscriptionsOrPromise","apiKeyOrPromise","remaining","timeouts","loop","promise","value","mapUsageByDate","usage","usedOrRemaining","dates","items","apiKeyId","apiKeyUsage","startDate","apiKeyDate","Array","isArray","item","setDate","getDate","mapApiKeyUsageByDate","dailyUsage","date","used","sort","parseInt","toTitleCase","string","firstLetter","allOtherLetters","slice","toUpperCase","toLowerCase","loadUsage","canvasId","start","getFullYear","getMonth","toJSON","end","fetchUsage","result","ctx","getElementById","JSON","stringify","labels","d","toLocaleDateString","weekday","year","month","day","max","Math","chartConfig","type","datasets","label","quota","period","lineTension","borderColor","pointBackgroundColor","pointBorderColor","borderWidth","pointRadius","pointHoverRadius","options","scales","yAxes","ticks","beginAtZero","suggestedMax","Chart","Grid","container","Row","Column","paddingTop","background","border","borderRadius","Loader","active","inline","Divider","filter","index","width","widescreen","marginBottom","throttle","Message","info","rateLimit","burstLimit","content","Title","firstApiName","swagger","title","List","Item","extraApiCount","Popup","trigger","cursor","on","position","Sidebar","props","Menu","inverted","borderless","attached","flex","SidebarHeader","MenuLink","onClick","className","apiGroupList","selectedApiId","selectedStage","activateFirst","group","route","toPairs","groupBy","some","getApisWithStages","Redirect","url","fontWeight","fontSize","GlobalModal","state","open","modalProps","children","modal","setState","close","Modal","React","Component","basic","right","top","display","flexDirection","notify","onDismiss","notification","GetSdkButton","pointing","sdkTypes","confirmDownload","getSdk","friendlyName","exportTypes","getExport","downloadingSdkOrApi","Dropdown","visible","button","toggleDropdown","prevState","hideDropdown","event","classList","contains","addEventListener","removeEventListener","getDownload","configurationProperties","GetSdkModal","fields","obj","property","name","default","required","handleChange","checked","prop","newState","handleSubmit","isDisabled","disabled","entries","Form","Checkbox","onChange","values","Group","Field","Radio","Input","placeholder","icon","longName","Content","onSubmit","Fragment","renderProperty","Actions","Icon","description","fetchBlob","blobType","endpointName","sdkType","exportType","ext","parameters","stageName","queryParams","responseType","blob","fileName","dataUri","URL","createObjectURL","downloadLinkElement","setAttribute","appendChild","click","removeChild","revokeObjectURL","downloadFile","parse","compact","negative","floating","addNotification","message","finally","extensions","omit","join","Markdown","source","rendered","useMemo","DOMPurify","sanitize","headerIds","InfoReplacement","endpoint","specSelectors","hasHost","basePath","servers","getIn","version","externalDocs","apiTitle","apiDescription","docsDescription","docsUrl","marginRight","paddingBottom","sdkGeneration","SubscriptionButtons","delete","put","marginTop","SwaggerLayoutPlugin","components","InfoContainer","PageWithSidebar","sidebarContent","SidebarPusherProps","Pushable","overflow","boxShadow","overflowY","Pusher","marginLeft","height","containerRef","createRef","hasRoot","updateApi","isInitial","match","isFirstLoad","cell","shouldPreauthorizeApiKey","preauthorizeApiKey","swaggerUiConfig","domNode","plugins","supportedSubmitMethods","spec","onComplete","uiHandler","SwaggerUI","errorHeader","errorBody","circular","MessageList","messages","useMessages","useState","nextId","renderWithDismiss","dismiss","newMessage","getAccountsWithFilter","a","getApiGatewayClient","accounts","first","rest","parts","p","encodeURIComponent","method","fetchAdminAccounts","FILLER_ACCOUNT","Symbol","NO_FILTER_COLUMN","NO_ORDER_COLUMN","ORDER_DIRECTIONS","lodashDirection","iconName","nextDirectionIndex","AccountsTable","columns","loading","selectedAccount","onSelectAccount","toolbarActions","pageSize","accountsView","setAccountsView","activePage","setActivePage","fill","activePageAccounts","setActivePageAccounts","filterableColumns","setFilterableColumns","column","setFilter","directionIndex","order","setOrder","useEffect","filtering","view","filterAccessor","accessor","Error","orderBy","ordering","iteratee","computeAccountsPage","useCallback","pageItems","fillerCount","totalPages","ceil","onPageChange","_event","newActivePage","tableRows","range","LoadingAccountRow","columnCount","account","FillerAccountRow","AccountRow","isSelected","onSelect","filterColumnDropdownOptions","toolbar","float","paddingRight","iconPosition","maxWidth","selection","table","Table","selectable","TableHeader","Body","Footer","HeaderCell","colSpan","Pagination","memo","onToggleOrder","nextOrder","nextIndex","orderDirection","styles","headerRow","from","_value","Cell","Placeholder","EmailAddress","IsAdmin","DateRegistered","formatDate","RegistrationMethod","ApiKeyId","Promoter","PromoterUserId","PromoterEmailAddress","Inviter","InviterUserId","InviterEmailAddress","DatePromoted","DateInvited","DATE_TIME_FORMATTER","Intl","DateTimeFormat","hour","minute","second","isoDateString","format","RegisteredAccounts","setAccounts","setLoading","setSelectedAccount","deleteModalOpen","setDeleteModalOpen","promoteModalOpen","setPromoteModalOpen","sendMessage","refreshAccounts","AccountService","admins","allMap","UserId","admin","onConfirmDelete","userId","errorMessage","onConfirmPromote","PromoteSuccessMessage","PromoteFailureMessage","AccountsTableColumns","canDelete","onClickDelete","canPromote","onClickPromote","DeleteAccountModal","onConfirm","onClose","PromoteAccountModal","TableActions","DeleteSuccessMessage","DeleteFailureMessage","AdminAccounts","useBoolean","initialState","PendingInvites","isCreateModalOpen","openCreateModal","closeCreateModal","isDeleteModalOpen","openDeleteModal","closeDeleteModal","createModalMessages","sendCreateModalMessage","clearCreateModalMessages","onConfirmCreate","emailAddress","targetEmailAddress","onConfirmResend","canCreate","onClickCreate","canResend","onClickResend","validEmailRegex","CreateInviteModal","setEmail","isEmailValid","onChangeEmailAddress","needsAssistance","setNeedsAssistance","emailEverSet","timer","hidden","warning","DeleteInviteModal","CreateSuccessMessage","CreateFailureMessage","ResendSuccessMessage","ResendFailureMessage","RedirectToApiManagement","Admin","SideNav","exact","component","ApiManagement","removeFirst","array","indexOf","splice","modalOpen","errors","plansDisplayToggling","apisDisplayToggling","apisUpdating","apisDeleting","apisTogglingSdks","fileInput","tableSort","localeCompare","genericTableSort","firstIndex","secondIndex","list","usagePlanSort","getApiVisibility","preventDefault","swaggerObject","anyFailures","files","prev","call","file","reader","FileReader","onload","e","YAML","res","status","Boolean","readAsText","_api","toJS","genApi","apisList","updatedApi","parity","updatedApis","stateApi","subscribable","updateLocalApiGatewayApis","deleteAPISpec","genericId","apiIds","usagePlanVisibility","hasHidden","hasVisible","getUsagePlanVisibility","paddingLeft","minWidth","showAllApiGatewayApis","isTogglingPlanDisplay","hideAllApiGatewayApis","renderNoApis","accumulator","usagePlanName","unsubscribable","renderHeader","renderApiList","renderHeaderVisibilityButton","restApiId","collapsing","hideApiGatewayApi","showApiGatewayApi","isTogglingApiDisplay","updateApiGatewayApi","isUpdatingApiGatewayApi","isSdkGenerationConfigurable","toggleSdkGeneration","isTogglingSdkGeneration","celled","fullWidth","sorted","sortByUsagePlan","closeIcon","closeOnEscape","closeOnDimmerClick","floated","uploadAPISpec","htmlFor","accept","multiple","isRemovingUnmanagedApi","getCognitoUrl","redirectUri","NavBar","stackable","APIs","formOpen","feedbackSubmitted","Feedback","handleOpenModal","handleCloseModal","client","submitFeedback","transform","borderTopLeftRadius","borderTopRightRadius","TextArea","PureComponent","prepareSearch","searchString","Set","searchTermRegexp","ApiSearch","setValue","searchQuery","setSearchQuery","isLoaded","useObserver","dataSet","searchable","updateSearch","debounce","leading","results","prepared","every","term","Search","onSearchChange","resultRenderer","feedbackEnabled","RegisteredRoute","Route","AdminRoute","HomeWrap","GettingStartedWrap","DashboardWrap","Dashboard","App","diff","getItem","init","hashRoute","substring","history","pushState","BrowserRouter","Switch","queryString","search","Apis","module","exports"],"mappings":"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","file":"static/js/main.86c1f0e1.chunk.js","sourcesContent":["// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useLayoutEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// mobx\nimport { observable } from 'mobx'\n\n// markdown parsing\nimport frontmatter from 'front-matter'\nimport marked from 'marked'\n\nexport const fragments = observable({})\n\nexport const loadFragments = () => {\n  loadHtml('/custom-content/content-fragments/GettingStarted.md', 'GettingStarted')\n  loadHtml('/custom-content/content-fragments/Home.md', 'Home')\n  loadHtml('/custom-content/content-fragments/APIs.md', 'APIs')\n}\n\n/**\n * Pre-load the custom-content markdown, parses its frontmatter, and renders it as JSX. This method\n * is asynchronous and doesn't actually return anything -- instead, it acts on a MobX Observable --\n * the fragment. The fragment is an object with a `jsx` property that maps to the rendered\n * component, and any number of other properties collected from the front-matter.\n *\n * @param {String} path   Path to the file to load in. Should be a markdown file.\n * @param {String} fragment   Name of the fragment. Determines where rendered data gets stored.\n *\n * @returns {Object}\n */\nfunction loadHtml (path, fragment) {\n  // if we want to display a loading indicator, this would be where\n  fragments[fragment] = { jsx: () => null }\n\n  window.fetch(path).then(response => response.text().then(text => {\n    const parsedMarkdown = frontmatter(text)\n    const html = marked(parsedMarkdown.body, {\n      headerPrefix: 'header-',\n      silent: true\n    })\n\n    fragments[fragment] = {\n      jsx: () => <ShowHTML html={html} />,\n      ...parsedMarkdown.attributes\n    }\n  }))\n}\n\nfunction ShowHTML ({ html }) {\n  /** @type {import(\"react\").MutableRefObject<HTMLDivElement>} */\n  const ref = useRef()\n\n  // Easier to do it here than to use a separate `useMemo` hook.\n  useLayoutEffect(() => {\n    // Normal links will work, but the cause a full page reload. We don't want that, so we replace\n    // them with react-router Links. However, replacing external links with react-router Links\n    // causes them to not work at all. We don't want that either, so we attempt to determine if a\n    // link is external or not, and replace them as appropriate.\n\n    const mountPoints = []\n    const links = ref.current.getElementsByTagName('a')\n\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      // if absolute url, use an `a` tag\n      // https://stackoverflow.com/a/19709846/4060061\n      if (/^(?:[a-z]+:)?\\/\\//i.test(link.href)) {\n        link.target = '_blank'\n        link.rel = 'noopener noreferrer'\n      } else {\n        // Replace links with react-router-dom tags so that they route correctly\n        const span = document.createElement('span')\n        // If there's CSS, don't listen to it.\n        span.style.setProperty('display', 'inline', 'important')\n        ReactDOM.render(<Link\n          to={link.href}\n          target={link.target}\n          dangerouslySetInnerHTML={{ __html: link.innerHTML }}\n        />, span)\n        link.replaceWith(span)\n        mountPoints.push(span)\n      }\n    }\n\n    // Gracefully unmount any mount points that were added\n    return () => {\n      mountPoints.forEach(elem => {\n        ReactDOM.render(null, elem)\n      })\n    }\n  }, [])\n\n  return <div ref={ref} dangerouslySetInnerHTML={{ __html: html }} />\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AWS from 'aws-sdk'\n\nimport _ from 'lodash'\n\nexport const awsRegion = _.get(window, 'config.region')\nexport const cognitoRegion = _.get(window, 'config.region')\nexport const cognitoUserPoolId = _.get(window, 'config.userPoolId')\nexport const cognitoIdentityPoolId = _.get(window, 'config.identityPoolId')\nexport const cognitoClientId = _.get(window, 'config.userPoolClientId')\nexport const cognitoDomain = _.get(window, 'config.userPoolDomain')\n\nAWS.config.region = cognitoRegion\n\nlet cachedClient\nlet cachedClientWithCredentials\n\nexport function initApiGatewayClient ({ accessKeyId, secretAccessKey, sessionToken } = {}) {\n  cachedClient = window.apigClientFactory.newClient({\n    accessKey: accessKeyId,\n    secretKey: secretAccessKey,\n    sessionToken: sessionToken,\n    region: awsRegion\n  })\n\n  if (accessKeyId && secretAccessKey && sessionToken) {\n    cachedClientWithCredentials = cachedClient\n  }\n\n  window.apigw = cachedClient\n}\n\nexport function apiGatewayClient () {\n  if (cachedClient) return Promise.resolve(cachedClient)\n  return new Promise(resolve => {\n    const poller = setInterval(() => {\n      if (cachedClient) {\n        clearInterval(poller)\n        resolve(cachedClient)\n      }\n    }, 100)\n  })\n}\n\nexport function apiGatewayClientWithCredentials () {\n  if (cachedClientWithCredentials) { return Promise.resolve(cachedClientWithCredentials) }\n  return new Promise(resolve => {\n    const poller = setInterval(() => {\n      if (cachedClientWithCredentials) {\n        clearInterval(poller)\n        resolve(cachedClientWithCredentials)\n      }\n    }, 100)\n  })\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Header, Segment, Container, Image, Button } from 'semantic-ui-react'\n\nexport const HomePage = observer(() => (\n  <>\n    <Segment vertical textAlign='center' style={{ color: 'whitesmoke', backgroundColor: 'slategray', padding: '40px 0px', margin: '0px !important' }}>\n      <Image centered size='small' src='/custom-content/home-image.png' />\n      <Header as='h1' style={{ color: 'whitesmoke' }}>{fragments.Home.header}</Header>\n      <p>{fragments.Home.tagline}</p>\n      <Link to='/getting-started' data-testid='gettingStartedLink'>\n        <Button positive>{fragments.Home.gettingStartedButton}</Button>\n      </Link>\n      <Link to='/apis' style={{ padding: '0.78571429em 1.5em 0.78571429em', color: 'white' }} data-testid='apiListLink'>\n        {fragments.Home.apiListButton}\n      </Link>\n    </Segment>\n    <Segment vertical style={{ padding: '40px 0px', margin: '0 !important' }}>\n      <Container fluid text textAlign='justified'>\n        <fragments.Home.jsx />\n      </Container>\n    </Segment>\n  </>\n))\n\nexport default HomePage\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// semantic-ui\nimport { Container } from 'semantic-ui-react'\n\nexport default observer(() => (\n  <Container style={{ padding: '40px' }}>\n    <fragments.GettingStarted.jsx />\n  </Container>\n))\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { observable, reaction } from 'mobx'\nimport _ from 'lodash'\n\nimport { getSubscribedUsagePlan } from 'services/api-catalog'\n\n/**\n * A function that returns a new object contain the default store\n */\nfunction storeDefaults () {\n  return {\n    api: undefined,\n    apiKey: undefined,\n    apiKeyFetchFailed: false,\n\n    apiList: {\n      loaded: false,\n      apiGateway: [],\n      generic: []\n    },\n\n    user: undefined,\n    idToken: undefined,\n\n    usagePlans: [],\n\n    subscriptions: [],\n\n    notifications: [],\n\n    visibility: {\n      apiGateway: [],\n      generic: {}\n    }\n  }\n}\n\n/**\n * Trick for logging the store: clone the object. i.e. _.cloneDeep(store) or JSON.parse(JSON.stringify(store))\n */\nexport const store = observable({\n  ...(storeDefaults()),\n\n  initialize () {\n    Object.assign(this, storeDefaults())\n\n    return this\n  },\n\n  /**\n   * Reset the entire store to the original values\n   */\n  clear () {\n    return this.initialize()\n  },\n\n  /**\n   * Reset specific keys on the store to their initial values\n   *\n   * @param {string[]} keys   The keys that should be reset. Accepts lodash paths. (e.g. )\n   */\n  reset (...keys) {\n    const defaults = storeDefaults()\n    keys.forEach(key => _.set(this, key, _.get(defaults, key)))\n    return this\n  },\n\n  resetUserData () {\n    this.reset('apiKey', 'user', 'subscriptions')\n  }\n})\n\n/**\n *\n * A short-hand function for creating reactions with protections against cyclical errors.\n *\n * @param {Function} triggerFn   A function that determines when fire the effectFn and what to pass to the effectFn.\n * @param {Function} effectFn   The side-effect to run when the data tracked by the triggerFn is changed.\n *\n * A note on MobX reactions: the side effect will \"only react to data that was accessed in the data expression\" and will only fire \"when the data returned by the expression has changed\". (https://mobx.js.org/refguide/reaction.html)\n */\nfunction reactTo (triggerFn, effectFn) {\n  // note -- had issues with cyclical reactions in the past\n  // the comments below will fix them if they come up again\n  // DO NOT REMOVE THEM\n\n  // function restartReaction() {\n  reaction(\n    triggerFn,\n    (data, action) => {\n      // action.dispose() // clear this \"listener\" so we don't cycle\n\n      effectFn(data, action)\n\n      // restartReaction() // restart the reaction after doing stuff to the data\n    }\n  )\n  // }\n\n  // restartReaction()\n}\n\nreactTo(\n  () => ({ subscriptions: store.subscriptions, usagePlans: store.usagePlans }),\n  ({ usagePlans }) => {\n    updateSubscriptionStatus(usagePlans)\n  }\n)\n\nreactTo(\n  () => [].concat(store.apiList.apiGateway, store.apiList.generic),\n  apiList => {\n    fetchApiImage(apiList)\n  }\n)\n\n/**\n *\n */\nfunction fetchApiImage (apiList) {\n  apiList.forEach(api => {\n    if (!api.logo) {\n      const key = api.apiStage == null ? api.id : `${api.apiId}_${api.apiStage}`\n      const specificLogo = `/custom-content/api-logos/${key}.png`\n\n      // fetch automatically follows redirects; setting redirect to `manual` prevents this\n      // we need to prevent it so that we can accurately determine if the image exists\n      window.fetch(specificLogo, { headers: { Accept: 'image/png' }, redirect: 'manual' }).then(response => {\n        if (response.ok) { api.logo = specificLogo } else api.logo = '/custom-content/api-logos/default.png'\n      })\n    }\n  })\n}\n\n/**\n * A helper function that simple re-builds the subscribed status for each api in the catalog.\n *\n * Should be run every time either the catalog updates or the\n */\nfunction updateSubscriptionStatus (usagePlans) {\n  if (usagePlans) {\n    usagePlans.forEach(usagePlan => {\n      const subscribed = !!getSubscribedUsagePlan(usagePlan.id)\n      usagePlan.subscribed = subscribed\n\n      usagePlan.apis.forEach(api => { api.subscribed = subscribed })\n    })\n  }\n}\n\nexport default store.initialize()\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport _ from 'lodash'\n\nimport { apiGatewayClientWithCredentials } from './api'\nimport { store } from './state'\nimport { isAdmin } from './self'\n\n/* Catalog and API Utils */\n\n/**\n *\n * Does all operations to get user data at once.\n *\n * @param {Boolean} bustCache=true   Ignore the cache and re-make the calls? Defaults to true.\n */\nexport function updateAllUserData (bustCache = true) {\n  const promises = [\n    updateUsagePlansAndApisList(bustCache),\n    updateSubscriptions(bustCache),\n    updateApiKey(bustCache)\n  ]\n\n  if (isAdmin()) { promises.push(updateVisibility(bustCache)) }\n\n  return Promise.all(promises)\n}\n\n/**\n *\n * Update the catalog for the current user. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n *\n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n *\n */\nexport function updateUsagePlansAndApisList (bustCache = false) {\n  // if we've already tried, just return that promise\n  if (!bustCache && catalogPromiseCache) return catalogPromiseCache\n\n  store.apiList.loaded = false\n\n  // eslint-disable-next-line no-return-assign\n  return catalogPromiseCache = apiGatewayClientWithCredentials()\n    .then(apiGatewayClient => apiGatewayClient.get('/catalog', {}, {}, {}))\n    .then(({ data = { apiGateway: [], generic: [] } }) => {\n      store.usagePlans = data.apiGateway\n      store.apiList = {\n        loaded: true,\n        apiGateway: getApiGatewayApisFromUsagePlans(store.usagePlans), // MUST create\n        generic: data.generic\n      }\n    })\n    .catch(() => {\n      store.usagePlans = []\n      store.apiList = {\n        loaded: true,\n        apiGateway: [],\n        generic: []\n      }\n    })\n}\nlet catalogPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\n/**\n * A function that takes an input usage plans and creates an list of apis out of it.\n *\n * - Makes sure each api has a non-recursive 'usagePlan' object\n *\n * returns an array of apis\n */\nfunction getApiGatewayApisFromUsagePlans (usagePlans) {\n  return usagePlans.reduce((acc, usagePlan) => {\n    usagePlan.apis.forEach(api => {\n      api.usagePlan = _.cloneDeep(usagePlan)\n      // remove the apis from the cloned usagePlan so we don't go circular\n      delete api.usagePlan.apis\n    })\n\n    return acc.concat(usagePlan.apis)\n  }, [])\n}\n\n/**\n * Return the API with the provided apiId. Can also provide the special strings \"FIRST\" or \"ANY\" to get the first API returned. Can select the api returned as a side-effect.\n *\n * @param {String} apiId   An apiId or the special strings 'FIRST' or 'ANY'. 'FIRST' and 'ANY' both return the first api encountered.\n * @param {Boolean} [selectIt=false]   If true, sets the found API as the current 'selected' API.\n */\nexport function getApi (apiId, selectIt = false, stage, cacheBust = false) {\n  return updateUsagePlansAndApisList(cacheBust)\n    .then(() => {\n      let thisApi\n\n      const allApis = [].concat(store.apiList.apiGateway, store.apiList.generic)\n\n      if (allApis.length) {\n        if (apiId === 'ANY' || apiId === 'FIRST') {\n          thisApi = allApis[0]\n        } else {\n          thisApi = allApis.find(api => (api.apiId === apiId && api.apiStage === stage))\n\n          if (!thisApi) {\n            thisApi = allApis.find(api => (api.id.toString() === apiId))\n          }\n        }\n      }\n\n      if (selectIt) store.api = thisApi\n\n      return thisApi\n    })\n}\n\nexport function updateVisibility (cacheBust = false) {\n  return apiGatewayClientWithCredentials()\n    .then(app => app.get('/admin/catalog/visibility', {}, {}, {}))\n    .then(({ data }) => (store.visibility = data))\n}\n\n/* Subscription Utils */\n\n/**\n * Fetch and update subscriptions store. Uses caching to determine if it should actually fetch or return the stored result.\n *\n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n */\nexport function updateSubscriptions (bustCache = false) {\n  const subscriptionsOrPromise = store.subscriptions.length ? store.subscriptions : subscriptionsPromiseCache\n  if (!bustCache && subscriptionsOrPromise) return Promise.resolve(subscriptionsOrPromise)\n\n  // eslint-disable-next-line no-return-assign\n  return subscriptionsPromiseCache = apiGatewayClientWithCredentials()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions', {}, {}, {}))\n    .then(({ data }) => (store.subscriptions = data))\n}\nlet subscriptionsPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\nexport function getSubscribedUsagePlan (usagePlanId) {\n  return store.subscriptions.find(sub => sub.id === usagePlanId)\n}\n\nexport function subscribe (usagePlanId) {\n  return apiGatewayClientWithCredentials()\n    .then(apiGatewayClient => apiGatewayClient.put('/subscriptions/' + usagePlanId, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\nexport function unsubscribe (usagePlanId) {\n  return apiGatewayClientWithCredentials()\n    .then(apiGatewayClient => apiGatewayClient.delete(`/subscriptions/${usagePlanId}`, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\n/**\n *\n * Fetches and updates the apiKey in the store. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n *\n */\nexport function updateApiKey (bustCache) {\n  const apiKeyOrPromise = store.apiKey ? store.apiKey : apiKeyPromiseCache\n  if (!bustCache && apiKeyOrPromise) return Promise.resolve(apiKeyOrPromise)\n  store.apiKeyFetchFailed = false\n\n  const MAX_RETRIES = 5\n  let remaining = MAX_RETRIES\n\n  const timeouts = [\n    250,\n    500,\n    1000,\n    2000\n  ]\n\n  function loop () {\n    remaining--\n    const promise = apiGatewayClientWithCredentials()\n      .then(apiGatewayClient => apiGatewayClient.get('/apikey', {}, {}, {}))\n      .then(({ data }) => (store.apiKey = data.value))\n\n    return remaining\n      ? promise.catch(() =>\n        new Promise(resolve => setTimeout(resolve, timeouts[remaining])).then(loop)\n      )\n      : promise\n  }\n\n  return (apiKeyPromiseCache = loop()).catch(() => {\n    store.apiKeyFetchFailed = true\n  })\n}\nlet apiKeyPromiseCache\n\nexport function fetchUsage (usagePlanId) {\n  const date = new Date()\n  const start = new Date(date.getFullYear(), date.getMonth(), 1).toJSON().split('T')[0]\n  const end = date.toJSON().split('T')[0]\n  return apiGatewayClientWithCredentials()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions/' + usagePlanId + '/usage', { start, end }, {}))\n}\n\nexport function mapUsageByDate (usage, usedOrRemaining) {\n  const dates = {}\n  Object.keys(usage.items).forEach(apiKeyId => {\n    const apiKeyUsage = mapApiKeyUsageByDate(usage.items[apiKeyId], usage.startDate, usedOrRemaining)\n\n    // handles the bizarre case that the user has more than one api key\n    // currently not possible (and my never be), so we probably don't need it\n    apiKeyUsage.forEach(dailyUsage => {\n      const date = dailyUsage[0]\n      const used = dailyUsage[1]\n      const remaining = dailyUsage[2]\n\n      if (!dates[date]) { dates[date] = { used: 0, remaining: 0 } }\n\n      dates[date].used += used\n      dates[date].remaining += remaining\n    })\n  })\n\n  const usageByDate = Object.keys(dates).sort().map(date => [\n    parseInt(date, 10),\n    dates[date].used,\n    dates[date].remaining\n  ])\n\n  return usageByDate\n}\n\nfunction mapApiKeyUsageByDate (apiKeyUsage, startDate) {\n  const apiKeyDate = new Date(startDate)\n\n  if (apiKeyUsage && !Array.isArray(apiKeyUsage[0])) { apiKeyUsage = [apiKeyUsage] }\n\n  return apiKeyUsage.map((usage) => {\n    const date = apiKeyDate.setDate(apiKeyDate.getDate())\n    const item = [date, ...usage]\n    apiKeyDate.setDate(apiKeyDate.getDate() + 1)\n    return item\n  })\n}\n\n// Marketplace support is currently broken\n// /* Marketplace integration */\n//\n// export function confirmMarketplaceSubscription (usagePlanId, token) {\n//   if (!usagePlanId) {\n//     return\n//   }\n//\n//   return apiGatewayClientWithCredentials()\n//     .then(apiGatewayClient => apiGatewayClient.put('/marketplace-subscriptions/' + usagePlanId, {}, { token: token }))\n// }\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AWS from 'aws-sdk'\n\n// services\nimport { store } from 'services/state'\nimport { updateAllUserData } from 'services/api-catalog'\nimport { initApiGatewayClient, apiGatewayClient, cognitoDomain, cognitoIdentityPoolId, cognitoUserPoolId, cognitoClientId, cognitoRegion } from 'services/api'\nimport * as jwtDecode from 'jwt-decode'\n\nexport function isAuthenticated () {\n  return store.idToken\n}\n\nfunction getPreferredRole () {\n  return jwtDecode(store.idToken)['cognito:preferred_role'] || ''\n}\n\nexport function isRegistered () {\n  if (!store.idToken) {\n    return false\n  }\n\n  const role = getPreferredRole()\n  return (\n    role.includes('-CognitoAdminRole-') ||\n    role.includes('-CognitoRegisteredRole-')\n  )\n}\n\nexport function isAdmin () {\n  return store.idToken && getPreferredRole().includes('-CognitoAdminRole-')\n}\n\nlet logoutTimer\n\nfunction getRemainingSessionTime (idToken) {\n  return jwtDecode(idToken).exp * 1000 - Date.now()\n}\n\n/**\n * On page load, look for an active cookie. If it exists and isn't expired, great, use it. Otherwise, clear everything and make sure we're not logged in.\n */\nexport function init () {\n  // attempt to refresh credentials from active session\n\n  let idToken\n  let diff = 0\n\n  try {\n    idToken = window.localStorage.getItem(cognitoUserPoolId)\n    if (idToken) diff = getRemainingSessionTime(idToken)\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (diff > 0) {\n    store.idToken = idToken\n    logoutTimer = setTimeout(logout, diff)\n    setCredentials()\n  } else {\n    initApiGatewayClient() // init a blank client (will get overwritten if we have creds)\n    logout()\n  }\n}\n\n/**\n * Gets triggered by the callback from the cognito user pool. Pretty much all it does is grab and store the idToken.\n */\nexport function login () {\n  return new Promise((resolve, reject) => {\n    let idToken\n    // let accessToken, username\n\n    try {\n      window.location.hash\n        .replace(/^#/, '')\n        .split('&')\n        .map(param => param.split('='))\n        .forEach(param => {\n          // record the id_token and access_token\n          if (param[0] === 'id_token') idToken = param[1]\n          // if (param[0] === 'access_token') accessToken = param[1]\n        })\n\n      if (idToken) { // we get both, we set both, but we only really care about the idToken\n        // username = jwtDecode(idToken)['cognito:username']\n\n        window.localStorage.setItem(cognitoUserPoolId, idToken)\n\n        store.idToken = idToken\n\n        logoutTimer = setTimeout(logout, getRemainingSessionTime(idToken))\n\n        setCredentials()\n\n        resolve(idToken)\n      }\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n\nexport const getLoginRedirectUrl = () =>\n  `${window.location.protocol}//${window.location.host}/index.html?action=login`\nexport const getLogoutRedirectUrl = () =>\n  `${window.location.protocol}//${window.location.host}/index.html?action=logout`\n\nfunction setCredentials () {\n  const preferredRole = jwtDecode(store.idToken)['cognito:preferred_role']\n  const params = {\n    IdentityPoolId: cognitoIdentityPoolId,\n    Logins: {\n      [`cognito-idp.${cognitoRegion}.amazonaws.com/${cognitoUserPoolId}`]: store.idToken\n    }\n  }\n\n  if (preferredRole) params.RoleArn = preferredRole\n\n  AWS.config.credentials = new AWS.CognitoIdentityCredentials(params)\n\n  return new Promise((resolve, reject) => {\n    AWS.config.credentials.refresh(error => {\n      if (error) {\n        console.error(error)\n        return reject(error)\n      }\n\n      initApiGatewayClient(AWS.config.credentials)\n      store.user = { email: jwtDecode(store.idToken).email }\n      updateAllUserData()\n\n      return apiGatewayClient()\n        .then(apiGatewayClient => apiGatewayClient.post('/signin', {}, {}, {}))\n    })\n  })\n}\n\n/**\n * Callback for the Cognito User Pool's logout just to make sure we clean up everything.\n */\nexport function logout () {\n  clearTimeout(logoutTimer)\n  logoutTimer = undefined\n  if (store.idToken) {\n    store.resetUserData()\n    window.localStorage.clear()\n\n    if (cognitoDomain) {\n      // redirect to cognito to log out there, too\n      const redirectUrl = getLogoutRedirectUrl()\n      window.location = `${cognitoDomain}/logout?client_id=${cognitoClientId}&logout_uri=${redirectUrl}`\n    }\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function getQueryString () {\n  const { search: q } = window.location\n\n  if (!q) return {}\n\n  return (/^[?#]/.test(q) ? q.slice(1) : q)\n    .split('&')\n    .reduce((params, param) => {\n      const [key, value] = param.split('=')\n      params[key] = value ? decodeURIComponent(value) : ''\n      return params\n    }, {})\n}\n\nexport function toTitleCase (string) {\n  const firstLetter = string[0]\n  const allOtherLetters = string.slice(1)\n\n  return firstLetter.toUpperCase() + allOtherLetters.toLowerCase()\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\nimport { Grid, Header, Popup, Loader, Message, List, Divider } from 'semantic-ui-react'\n\nimport Chart from 'chart.js'\nimport { fetchUsage, mapUsageByDate } from 'services/api-catalog'\nimport { toTitleCase } from 'services/misc'\n\nimport { observer } from 'mobx-react'\n\nimport { store } from 'services/state'\n\nimport _ from 'lodash'\n\nfunction loadUsage (usagePlan, canvasId) {\n  fetchUsage(usagePlan.id)\n    .then((result) => {\n      const data = mapUsageByDate(result.data, 'used')\n      const ctx = document.getElementById(canvasId)\n\n      const oldDataString = JSON.stringify(_.get(usagePlan, 'usage.data', {}))\n      const newDataString = JSON.stringify(data)\n\n      if (oldDataString !== newDataString) { usagePlan.usage = { data } }\n\n      const labels = data.map(d => new Date(d[0]).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }))\n      const used = data.map(d => d[1])\n      const remaining = data.map(d => d[2])\n      const max = Math.max(...used, ...remaining)\n\n      const chartConfig = {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: 'Requests used' + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: used,\n              lineTension: 0,\n              backgroundColor: '#00bfff',\n              borderColor: '#00bfff',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n\n            },\n            {\n              label: 'Remaining requests' + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: remaining,\n              lineTension: 0,\n              backgroundColor: 'transparent',\n              borderColor: 'red',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n            }\n          ]\n        },\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                suggestedMax: max + (max * 0.02)\n              }\n            }]\n          }\n        }\n      }\n\n      // eslint-disable-next-line no-new\n      new Chart(ctx, chartConfig)\n    })\n    .catch((error) => {\n      console.error(error)\n      if (!usagePlan.usage) { usagePlan.usage = { } }\n\n      usagePlan.usage.error = error\n    })\n}\n\nexport default observer(() => {\n  return (\n    <Grid container>\n      <Grid.Row>\n        <Grid.Column style={{ paddingTop: '40px' }}>\n          <Header size='medium'>API Key</Header>\n          {\n            store.apiKey\n              ? (\n                <code style={{\n                  background: 'black',\n                  border: '1px solid gray',\n                  padding: '7px 8px',\n                  color: 'lightgray',\n                  borderRadius: '5px'\n                }}\n                >\n                  {store.apiKey}\n                </code>\n              )\n              // Note: this should be the same size as the text\n              : <Loader active inline size='tiny'>\n                {store.apiKeyFetchFailed ? <>\n                  Please wait a minute and try refreshing. If this doesn't work, please contact\n                  the admin for assistance.\n                </> : null}\n              </Loader>\n          }\n        </Grid.Column>\n      </Grid.Row>\n      <Divider />\n      <Grid.Row>\n\n        {store.usagePlans\n          .filter(usagePlan => usagePlan.subscribed && usagePlan.apis.length)\n          .map((usagePlan, index) => {\n            const canvasId = `api-usage-chart-container-${usagePlan.id}` + index\n\n            loadUsage(usagePlan, canvasId)\n\n            return (\n              <Grid.Column width={16} widescreen={8} key={usagePlan.id} style={{ marginBottom: '40px' }}>\n                <Title apis={usagePlan.apis} />\n                {usagePlan.throttle && (\n                  <Message info>\n                    <p>\n                      Requests limited to {usagePlan.throttle.rateLimit} per second, and {usagePlan.throttle.burstLimit} in a burst.\n                    </p>\n                  </Message>\n                )}\n                {!usagePlan.usage ? (\n                  <Loader active />\n                ) : (\n                  usagePlan.error ? (\n                    <Message error content={usagePlan.error.toString()} />\n                  ) : null\n                )}\n                <canvas id={canvasId} />\n              </Grid.Column>\n            )\n          })}\n      </Grid.Row>\n    </Grid>\n  )\n})\n\nconst Title = ({ apis }) => {\n  const firstApiName = apis[0].swagger.info.title\n\n  const apiList = (\n    <List>\n      {apis.reduce((acc, api) => acc.concat(\n        <List.Item key={api.id}>{api.swagger.info.title}</List.Item>\n      ), [])}\n    </List>\n  )\n\n  const extraApiCount = apis.length - 1\n\n  return (\n    <Header size='medium'>\n      Usage for {extraApiCount ? (\n        <Popup\n          trigger={<a style={{ cursor: 'pointer' }}>{firstApiName} and {extraApiCount} more...</a>}\n          content={apiList}\n          on={['hover', 'click']}\n          position='right center'\n        />\n      ) : (\n        firstApiName\n      )}\n    </Header>\n  )\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nfunction Sidebar ({ style, ...props }) {\n  return (\n    <Menu\n      inverted vertical borderless attached\n      style={{ flex: '0 0 auto', width: 'auto', ...style }}\n      {...props}\n    />\n  )\n}\n\nexport default Sidebar\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Menu } from 'semantic-ui-react'\n\nfunction SidebarHeader ({ style, ...props }) {\n  return (\n    <Menu.Header\n      style={{ padding: '13px 5px 13px 16px', color: 'lightsteelblue', ...style }}\n      {...props}\n    />\n  )\n}\n\nexport default SidebarHeader\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nfunction MenuLink ({ to, ...props }) {\n  if (props.onClick == null && to == null) {\n    return <Menu.Item className='link' {...props} style={{ ...props.style, cursor: 'default' }} />\n  } else if (props.onClick != null || /^https?:\\/\\//.test(to)) {\n    // The class name here is to avoid a selector precedence issue in a few isolated cases\n    return <Menu.Item className='link' as='a' href={to} {...props} />\n  } else {\n    return <Menu.Item className='link' as={Link} to={to} {...props} />\n  }\n}\n\nexport default MenuLink\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\n\n// semantic-ui\nimport { Menu, Loader } from 'semantic-ui-react'\n\n// store\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state'\n\n// utilities\nimport _ from 'lodash'\nimport Sidebar from 'components/Sidebar/Sidebar'\nimport SidebarHeader from 'components/Sidebar/SidebarHeader'\nimport MenuLink from 'components/MenuLink'\n\nfunction getApisWithStages (selectedApiId, selectedStage, activateFirst) {\n  const apiList = [].concat(_.get(store, 'apiList.generic', []), _.get(store, 'apiList.apiGateway', [])).map(api => ({\n    group: api.apiId || api.id,\n    id: api.apiStage || api.id,\n    title: api.swagger.info.title,\n    route: `/apis/${api.id}` + (api.apiStage ? '/' + api.apiStage : ''),\n    active: (\n      (selectedApiId && (api.id === selectedApiId || api.apiId === selectedApiId)) &&\n      (!selectedStage || api.apiStage === selectedStage)\n    ),\n    stage: api.apiStage\n  }))\n\n  return _.toPairs(_.groupBy(apiList, 'group'))\n    .map(([group, apis]) => ({ group, apis, active: _.some(apis, 'active'), title: apis[0].title }))\n}\n\nexport default observer(function ApisMenu (props) {\n  // If we're still loading, display a spinner.\n  // If we're not loading, and we don't have any apis, display a message.\n  // If we're not loading, and we have some apis, render the appropriate api subsections for apiGateway and generic apis\n  if (!store.apiList.loaded) {\n    return <Loader active />\n  }\n\n  const apiGroupList = getApisWithStages(\n    props.activateFirst && props.path.params.apiId,\n    props.path.params.stage,\n    props.activateFirst\n  )\n\n  if (!apiGroupList.length) {\n    return <p style={{ padding: '13px 16px', color: 'whitesmoke' }}>No APIs Published</p>\n  }\n\n  if (props.activateFirst && !props.path.params.apiId) {\n    return <Redirect to={apiGroupList[0].apis[0].route} />\n  }\n\n  return (\n    <Sidebar>\n      <SidebarHeader\n        as={Link}\n        className='item'\n        to='/apis/search'\n        active={props.path.url === '/apis/search'}\n        style={{ fontWeight: '400', fontSize: '1em' }}\n      >\n        Search APIs\n      </SidebarHeader>\n\n      <SidebarHeader>APIs</SidebarHeader>\n\n      <>\n        {apiGroupList.map(({ apis, title, group, active }) => (\n          <MenuLink key={group} active={active} to={apis[0].stage ? null : apis[0].route}>\n            {title}\n            {apis[0].stage ? (\n              <Menu.Menu>\n                {apis.map(({ route, stage, active, id }) => (\n                  <MenuLink key={id} to={route} active={active} style={{ fontWeight: '400' }}>\n                    {stage}\n                  </MenuLink>\n                ))}\n              </Menu.Menu>\n            ) : null}\n          </MenuLink>\n        ))}\n      </>\n    </Sidebar>\n  )\n})\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Modal } from 'semantic-ui-react'\n// import { GetSdkModal } from './GetSdk'\n\n/**\n * For the time being, this can only be used once. I know this is a bad practice, but this is both in the interest of time and user experience. If we really want more than one modal at once, we can revisit in the future. For now, I want it to be hard to make multiple at once.\n */\nexport default class GlobalModal extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      modalProps: {},\n      children: null\n    }\n\n    modal.open = (children, modalProps = {}) => {\n      this.setState({\n        children,\n        modalProps,\n        open: true\n      })\n    }\n    modal.close = () => {\n      this.setState({ open: false })\n    }\n  }\n\n  render () {\n    return (\n      <>\n        <Modal {...this.state.modalProps} open={this.state.open}>\n          {this.state.children}\n        </Modal>\n      </>\n    )\n  }\n}\n\n// the modal controller\n// start with noop modals\nexport const modal = {\n  open: () => { },\n  close: () => { }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Segment, Message } from 'semantic-ui-react'\n\nimport { observer } from 'mobx-react'\n\nimport { store } from 'services/state'\n\nexport default observer(function AlertPopup () {\n  return (\n    <Segment basic style={{ position: 'absolute', right: 0, margin: 0, top: '56px', display: 'flex', flexDirection: 'column' }}>\n      {store.notifications.map(notify => {\n        /* eslint-disable react/jsx-closing-bracket-location */\n        // eslint-disable-next-line react/jsx-key\n        return <Message\n          {...notify}\n          onDismiss={() => clearNotification(notify)}\n          style={{ margin: 0, marginBottom: '15px' }}\n        />\n        /* eslint-enable react/jsx-closing-bracket-location */\n      })}\n    </Segment>\n  )\n})\n\nexport function addNotification ({ compact = true, negative = true, floating = true, icon = 'warning sign', header = 'Error', content = 'An unknown error has occurred.' }) {\n  store.notifications.push({\n    compact, negative, floating, icon, header, content\n  })\n}\n\nfunction clearNotification (notification) {\n  store.notifications = store.notifications.filter(notify => notify !== notification)\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { apiGatewayClientWithCredentials } from 'services/api'\nimport { store } from 'services/state'\n\nimport React from 'react'\n\nimport { Loader, Button, Header, Modal, Icon, Form } from 'semantic-ui-react'\nimport { modal } from 'components/Modal'\nimport { addNotification } from 'components/AlertPopup'\n\nimport { observer } from 'mobx-react'\n\nimport _ from 'lodash'\n\n/**\n * This button is used in the `InfoReplacement` component of the SwaggerUiLayout to add the GetSdkButton directly into the SwaggerUi UI.\n */\nexport const GetSdkButton = observer(() => {\n  return (\n    <span>\n      <Dropdown text='Download SDK' pointing className='link item'>\n        {sdkTypes.map((type) => (\n          <div className='item' key={type.id} onClick={() => confirmDownload(type, getSdk)}>\n            {type.friendlyName}\n          </div>\n        ))}\n      </Dropdown>\n      <Dropdown text='Export API' pointing className='link item'>\n        {exportTypes.map((type) => (\n          <div className='item' key={type.id} onClick={() => confirmDownload(type, getExport)}>\n            {type.friendlyName}\n          </div>\n        ))}\n      </Dropdown>\n      {store.api.downloadingSdkOrApi && <Loader active inline size='tiny' />}\n    </span>\n  )\n})\n\nclass Dropdown extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = { visible: false }\n    this.button = +(new Date()) + '-dropdown-clickable' // we've using this class to exclude certain elements from hiding\n\n    this.toggleDropdown = () => this.setState(prevState => ({ ...prevState, visible: !prevState.visible }))\n    this.hideDropdown = event => {\n      if (!event.target.classList.contains(this.button)) { this.setState(prevState => ({ ...prevState, visible: false })) }\n    }\n\n    document.addEventListener('click', this.hideDropdown)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('click', this.hideDropdown)\n  }\n\n  render () {\n    /* eslint-disable react/jsx-handler-names */\n    return (\n      <span onClick={this.toggleDropdown} className={'ui button pointing dropdown link item ' + this.button + (this.state.visible ? ' active' : '')}>\n        {this.props.text}\n        <i className={'dropdown icon ' + this.button} />\n        <div className={'menu transition' + (this.state.visible ? ' visible' : '')}>\n          {this.props.children}\n        </div>\n      </span>\n    )\n    /* eslint-enable react/jsx-handler-names */\n  }\n}\n\nfunction confirmDownload (type, getDownload) {\n  if (type.configurationProperties.length) {\n    modal.open(<GetSdkModal type={type} getDownload={getDownload} />)\n  } else {\n    getDownload(type.id)\n  }\n}\n\n/**\n * This modal is included by the modals component, which also provides the default open/close controls for all modals.\n */\nexport class GetSdkModal extends React.Component {\n  constructor (props) {\n    super(props)\n\n    // generate a null state value for each required property (to validate against)\n    const fields = props.type.configurationProperties.reduce((obj, property) => {\n      if (property.type === 'checkbox') {\n        obj[property.name] = false\n      } else if (property.type === 'radio') {\n        obj[property.name] = property.default\n      } else if (property.required) {\n        obj[property.name] = null\n      }\n      return obj\n    }, {})\n\n    this.state = {\n      fields\n    }\n\n    this.handleChange = (event, { name, checked, value }) => {\n      this.setState((prevState) => {\n        const prop = this.props.type.configurationProperties.find(property => property.name === name)\n        const newState = _.cloneDeep(prevState)\n        newState.fields[name] = prop.type === 'checkbox' ? checked : value\n        return newState\n      })\n    }\n\n    this.handleSubmit = () => {\n      if (!this.isDisabled().disabled) {\n        modal.close()\n        this.props.getDownload(this.props.type.id, this.state.fields)\n      }\n    }\n  }\n\n  // this function returns a prop directly\n  // it's intended to be used like <Component {...this.canSubmit()} />\n  isDisabled () {\n    const hasEmptyValue = !!Object.entries(this.state.fields)\n      .find(([key, value]) => value == null || value === '')\n\n    return { disabled: hasEmptyValue }\n  }\n\n  renderProperty (property) {\n    if (property.type === 'checkbox') {\n      return (\n        <Form.Checkbox\n          name={property.name}\n          label={`${property.friendlyName}`}\n          onChange={this.handleChange}\n        />\n      )\n    } else if (\n      property.type === 'radio' &&\n      property.values.some(value => property.default === value.name)\n    ) {\n      return (\n        <Form.Group inline>\n          <Form.Field>{property.friendlyName}</Form.Field>\n          <>\n            {property.values.map(({ friendlyName, name }) => (\n              <Form.Radio\n                key={name}\n                name={property.name}\n                label={`${friendlyName}`}\n                value={name}\n                checked={this.state.fields[property.name] === name}\n                onChange={this.handleChange}\n              />\n            ))}\n          </>\n        </Form.Group>\n      )\n    } else if (property.required) {\n      return (\n        <Form.Input\n          name={property.name}\n          label={`${property.friendlyName} (required)`}\n          placeholder={property.friendlyName}\n          onChange={this.handleChange}\n        />\n      )\n    } else {\n      // only display required fields for now\n      return null\n    }\n  }\n\n  render () {\n    const type = this.props.type\n\n    /* eslint-disable react/jsx-closing-bracket-location */\n    /* eslint-disable react/jsx-closing-tag-location */\n    /* eslint-disable react/jsx-handler-names */\n    return <>\n      <Header icon='archive' content={`Download the ${type.longName}`} />\n      <Modal.Content>\n        <Form onSubmit={this.handleSubmit}>\n          {type.configurationProperties.map(property => (\n            <React.Fragment key={property.name}>\n              {this.renderProperty(property)}\n            </React.Fragment>\n          ))}\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color='red' onClick={modal.close}>\n          <Icon name='remove' /> Cancel\n        </Button>\n        <Button color='green' {...this.isDisabled()} onClick={this.handleSubmit}>\n          <Icon name='checkmark' /> Download\n        </Button>\n      </Modal.Actions>\n    </>\n    /* eslint-enable react/jsx-closing-bracket-location */\n    /* eslint-enable react/jsx-closing-tag-location */\n    /* eslint-enable react/jsx-handler-names */\n  }\n}\n\nconst sdkTypes = [\n  {\n    id: 'android',\n    friendlyName: 'Android',\n    longName: 'Android SDK',\n    description: '',\n    configurationProperties: [\n      {\n        name: 'groupId',\n        friendlyName: 'Group ID',\n        description: '',\n        required: true\n      }, {\n        name: 'invokerPackage',\n        friendlyName: 'Invoker package',\n        description: '',\n        required: true\n      }, {\n        name: 'artifactId',\n        friendlyName: 'Artifact ID',\n        description: '',\n        required: true\n      }, {\n        name: 'artifactVersion',\n        friendlyName: 'Artifact version',\n        description: '',\n        required: true\n      }\n    ]\n  },\n  {\n    id: 'javascript',\n    friendlyName: 'JavaScript',\n    longName: 'JavaScript SDK',\n    description: '',\n    configurationProperties: []\n  },\n  {\n    id: 'ios-objective-c',\n    friendlyName: 'iOS (Objective-C)',\n    longName: 'iOS SDK (Objective-C)',\n    description: '',\n    configurationProperties: [\n      {\n        name: 'classPrefix',\n        friendlyName: 'Prefix',\n        description: '',\n        required: true\n      }\n    ]\n  },\n  {\n    id: 'ios-swift',\n    friendlyName: 'iOS (Swift)',\n    longName: 'iOS SDK (Swift)',\n    description: '',\n    configurationProperties: [\n      {\n        name: 'classPrefix',\n        friendlyName: 'Prefix',\n        description: '',\n        required: true\n      }\n    ]\n  },\n  {\n    id: 'java',\n    friendlyName: 'Java',\n    longName: 'Java SDK',\n    description: 'Java SDK generator for API Gateway APIs',\n    configurationProperties: [\n      {\n        name: 'service.name',\n        friendlyName: 'Service Name',\n        description: 'Name of the service which is used to derive the Java interface name for your client',\n        required: true\n      },\n      {\n        name: 'java.package-name',\n        friendlyName: 'Java Package Name',\n        description: 'Name of the Java package your code will be generated under',\n        required: true\n      },\n      {\n        name: 'java.build-system',\n        friendlyName: 'Java Build System',\n        description: 'Build system to setup for project; Currently supported: maven, gradle',\n        required: false\n      },\n      {\n        name: 'java.group-id',\n        friendlyName: 'Java Group Id',\n        description: 'Group id for your Maven or Gradle project. Defaults to package name',\n        required: false\n      },\n      {\n        name: 'java.artifact-id',\n        friendlyName: 'Java Artifact Id',\n        description: 'Artifact Id for your Maven project or project name for your Gradle project. Defaults to service name',\n        required: false\n      },\n      {\n        name: 'java.artifact-version',\n        friendlyName: 'Java Artifact Version',\n        description: 'Version of your Maven or Gradle project. Defaults to 1.0-SNAPSHOT',\n        required: false\n      },\n      {\n        name: 'java.license-text',\n        friendlyName: 'Source Code License Text',\n        description: 'Customer provided license to inject into source file headers',\n        required: false\n      }\n    ]\n  },\n  {\n    id: 'ruby',\n    friendlyName: 'Ruby',\n    longName: 'Ruby SDK',\n    description: 'Ruby SDK generator for API Gateway APIs',\n    configurationProperties: [\n      {\n        name: 'service.name',\n        friendlyName: 'Service Name',\n        description: 'Name of the service which is used to derive the name for your client',\n        required: true\n      },\n      {\n        name: 'ruby.gem-name',\n        friendlyName: 'Ruby Gem Name',\n        description: 'Name of the Ruby gem your code will be generated under',\n        required: false\n      },\n      {\n        name: 'ruby.gem-version',\n        friendlyName: 'Ruby Gem Version',\n        description: 'Version number for your service gem. Defaults to 1.0.0',\n        required: false\n      }\n    ]\n  }\n]\n\nconst exportTypes = [\n  {\n    id: 'oas30',\n    friendlyName: 'OpenAPI 3',\n    longName: 'OpenAPI 3 definitions',\n    description: '',\n    configurationProperties: [\n      {\n        name: 'extensions.integrations',\n        friendlyName: 'Include x-amazon-apigateway-integration extensions',\n        description: '',\n        type: 'checkbox'\n      },\n      {\n        name: 'extensions.authorizers',\n        friendlyName: 'Include x-amazon-apigateway-authorizer extensions',\n        description: '',\n        type: 'checkbox'\n      },\n      {\n        name: 'extensions.postman',\n        friendlyName: 'Include extensions to allow importing into Postman',\n        description: '',\n        type: 'checkbox'\n      },\n      {\n        name: 'accept',\n        friendlyName: 'Export format',\n        description: '',\n        type: 'radio',\n        default: 'application/json',\n        values: [\n          { name: 'application/json', friendlyName: 'JSON' },\n          { name: 'application/yaml', friendlyName: 'YAML' }\n        ]\n      }\n    ]\n  },\n  {\n    id: 'swagger',\n    friendlyName: 'Swagger 2',\n    longName: 'Swagger (OpenAPI 2) definitions',\n    description: '',\n    configurationProperties: [\n      {\n        name: 'extensions.integrations',\n        friendlyName: 'Include x-amazon-apigateway-integration extensions',\n        description: '',\n        type: 'checkbox'\n      },\n      {\n        name: 'extensions.authorizers',\n        friendlyName: 'Include x-amazon-apigateway-authorizer extensions',\n        description: '',\n        type: 'checkbox'\n      },\n      {\n        name: 'extensions.postman',\n        friendlyName: 'Include extensions to allow importing into Postman',\n        description: '',\n        type: 'checkbox'\n      },\n      {\n        name: 'accept',\n        friendlyName: 'Export format',\n        description: '',\n        type: 'radio',\n        default: 'application/json',\n        values: [\n          { name: 'application/json', friendlyName: 'JSON' },\n          { name: 'application/yaml', friendlyName: 'YAML' }\n        ]\n      }\n    ]\n  }\n]\n\n/**\n *\n * Let's talk about this for a moment. For some reason, passing data through the server adds (or removes?)\n * an unknown layer of encoding. To get around this, we're converting the file to a datauri on the backend,\n * then sending that through. Kinda unfortunate, because the datauri is larger than the actual encoded file.\n *\n * Eventually, this encoding should be uncovered, and removed or worked around. Once we do that, we will\n * need to switched to requesting a blob, then use a file reader to read the Blob. For now, I'm leaving those\n * in comments so we know how.\n *\n */\n\nfunction fetchBlob ({ blobType, endpointName, sdkType, exportType, ext, parameters }) {\n  const apiId = store.api.apiId || store.api.id\n  const stageName = store.api.apiStage\n\n  store.api.downloadingSdkOrApi = true\n\n  return apiGatewayClientWithCredentials()\n    .then(apiGatewayClient => apiGatewayClient.get(\n      `/catalog/${apiId}_${stageName}/${endpointName}`,\n      { sdkType },\n      {},\n      {\n        queryParams: { exportType, parameters: JSON.stringify(parameters) },\n        config: { responseType: 'blob' }\n      }\n    ))\n    .then(({ data }) => {\n      downloadFile(data, `${apiId}_${stageName}-${sdkType || exportType}${ext}`)\n    })\n    .catch(({ data }) => data.text().then(text => {\n      const result = JSON.parse(text)\n      addNotification({ header: `An error occurred while attempting to download the ${blobType}.`, content: result && result.message })\n    }))\n    .finally(() => {\n      store.api.downloadingSdkOrApi = false\n    })\n}\n\nfunction downloadFile (blob, fileName) {\n  const dataUri = URL.createObjectURL(blob)\n  const downloadLinkElement = document.createElement('a')\n  downloadLinkElement.setAttribute('href', dataUri)\n  downloadLinkElement.setAttribute('download', fileName)\n  downloadLinkElement.style.display = 'none'\n\n  document.body.appendChild(downloadLinkElement)\n  downloadLinkElement.click()\n  document.body.removeChild(downloadLinkElement)\n  URL.revokeObjectURL(dataUri)\n}\n\nfunction getSdk (sdkType, parameters = {}) {\n  return fetchBlob({\n    blobType: 'SDK',\n    endpointName: 'sdk',\n    ext: '.zip',\n    sdkType,\n    parameters\n  })\n}\n\nfunction getExport (exportType, parameters = {}) {\n  if (exportType === 'oas30' || exportType === 'swagger') {\n    const extensions = []\n    if (parameters['extensions.integrations']) extensions.push('integrations')\n    if (parameters['extensions.authorizers']) extensions.push('authorizers')\n    if (parameters['extensions.postman']) extensions.push('postman')\n    parameters = _.omit(parameters, [\n      'extensions.integrations',\n      'extensions.authorizers',\n      'extensions.postman'\n    ])\n    if (extensions.length) parameters.extensions = extensions.join(',')\n  }\n\n  return fetchBlob({\n    blobType: 'API export',\n    endpointName: 'export',\n    ext: '.json',\n    exportType,\n    parameters\n  })\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useMemo } from 'react'\n\n// semantic-ui\nimport { Button, Header, Image, Container } from 'semantic-ui-react'\n\n// markdown for external docs description\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\n\n// services\nimport { subscribe, unsubscribe } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\nimport { GetSdkButton } from 'components/GetSdk'\n\n// state\nimport { observer, Observer } from 'mobx-react'\nimport { store } from 'services/state.js'\n\n// Create the plugin that provides our layout component\nexport const SwaggerLayoutPlugin = () => ({ components: { InfoContainer: InfoReplacement } })\n\nfunction Markdown ({ source }) {\n  const rendered = useMemo(() => DOMPurify.sanitize(marked(source, {\n    headerIds: false,\n    silent: true\n  })), [source])\n\n  return <div dangerouslySetInnerHTML={{ __html: rendered }} />\n}\n\n// replaces the InfoContainer component\n// https://github.com/swagger-api/swagger-ui/blob/dd3afdc45656bda2a64ae6a7f9bdad006ea98149/src/core/components/layouts/base.jsx\n\n// Note: this is called not as a component, but as a function within a class component. Do\n// *not* make this a component, and do *not* use hooks or anything similar in it.\nfunction InfoReplacement ({ specSelectors }) {\n  let endpoint\n  if (specSelectors.hasHost()) {\n    endpoint = `https://${specSelectors.host()}${specSelectors.basePath() || ''}`\n  } else {\n    const servers = specSelectors.servers()\n    if (servers && servers.size) endpoint = servers.getIn([0, 'url'])\n  }\n\n  const info = specSelectors.info()\n  const version = specSelectors.version()\n  const externalDocs = specSelectors.externalDocs()\n  const apiTitle = info.get('title')\n  const apiDescription = info.get('description')\n  const docsDescription = externalDocs.get('description')\n  const docsUrl = externalDocs.get('url')\n\n  return <Observer>\n    {/*\n      If no API is loaded, let's just swallow the state and move on. (Swagger UI doesn't offer any\n      way to clean up after itself.)\n    */}\n    {() => store.api == null ? null : <Container fluid textAlign='left' className='fixfloat' style={{ padding: '40px 0px' }}>\n      <div style={{ display: 'flex' }}>\n        <div style={{ flex: '0 0 auto', marginRight: '20px' }}>\n          <Image size='small' src={store.api.logo} />\n        </div>\n        <div>\n          <Header as='h1'>{apiTitle}</Header>\n          <div style={{ display: 'flex', paddingBottom: '1em' }}>\n            <div style={{ marginRight: '20px' }}>\n              {store.api.apiStage == null ? <p style={{ fontWeight: 'bold' }}>Version</p> : null}\n              {endpoint ? <p style={{ fontWeight: 'bold' }}>Endpoint</p> : null}\n              {apiDescription ? <p style={{ fontWeight: 'bold' }}>Description</p> : null}\n              {/* <p style={{ fontWeight: \"bold\" }}>Usage Plan</p> */}\n            </div>\n            <div>\n              {store.api.apiStage == null ? <p>{version}</p> : null}\n              {endpoint ? <p>{endpoint}</p> : null}\n              {apiDescription ? <p>{apiDescription}</p> : null}\n              {/* <p>{store.api.usagePlan.name}</p> */}\n            </div>\n          </div>\n          {externalDocs ? (\n            <div style={{ paddingBottom: '1em' }}>\n              {docsDescription ? <Markdown source={docsDescription} /> : null}\n              <a href={docsUrl}>{docsUrl}</a>\n            </div>\n          ) : null}\n          <SubscriptionButtons />\n          {store.api.sdkGeneration && <GetSdkButton />}\n        </div>\n      </div>\n    </Container>}\n  </Observer>\n}\n\nconst SubscriptionButtons = observer(class SubscriptionButtons extends React.Component {\n  render () {\n    const { api } = store\n\n    if (!api || !isAuthenticated()) {\n      return null\n    }\n\n    const apiIsSubscribable = !!(api && api.apiStage && api.usagePlan)\n\n    if (apiIsSubscribable) {\n      return (\n        api.subscribed ? (\n          <Button onClick={() => unsubscribe(api.usagePlan.id)}>Unsubscribe</Button>\n        ) : (\n          <Button onClick={() => subscribe(api.usagePlan.id)}>Subscribe</Button>\n        )\n      )\n    } else {\n      return <Header style={{ marginTop: '0em' }} as='h4' color='grey'>This version of the API is not configured to be subscribable from the portal. Please contact an admin for more details.</Header>\n    }\n  }\n})\n\nexport default SwaggerLayoutPlugin\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// semantic-ui\nimport { Sidebar, Segment, Menu } from 'semantic-ui-react'\n\nexport default class PageWithSidebar extends React.Component {\n  render () {\n    const { sidebarContent, children, SidebarPusherProps } = this.props\n    return (\n      <Sidebar.Pushable\n        as={Segment}\n        style={{\n          display: 'flex',\n          flex: '1 1 auto',\n          overflow: 'hidden',\n          border: 'none',\n          margin: 0,\n          borderRadius: 0,\n          boxShadow: 'none'\n        }}\n      >\n        <Sidebar\n          as={Menu}\n          inverted\n          attached\n          borderless\n          vertical\n          visible\n          style={{\n            margin: 0,\n            borderRadius: 0,\n            flex: '0 0 auto',\n            position: 'relative',\n            overflowY: 'scroll',\n            width: '260px'\n          }}\n        >\n          {sidebarContent}\n        </Sidebar>\n        <Sidebar.Pusher\n          style={{\n            marginLeft: 0,\n            position: 'absolute',\n            flex: '1 1 auto',\n            height: '100%',\n            overflow: 'auto',\n            width: 'calc(100% - 260px)'\n          }}\n          {...SidebarPusherProps}\n        >\n          {children}\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    )\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// swagger-ui\nimport SwaggerUI from 'swagger-ui'\nimport 'swagger-ui/dist/swagger-ui.css'\n\n// semantic-ui\nimport { Container, Header, Icon } from 'semantic-ui-react'\n\n// services\nimport { isRegistered } from 'services/self'\nimport { updateUsagePlansAndApisList, getApi } from 'services/api-catalog'\n\n// components\nimport ApisMenu from 'components/ApisMenu'\nimport SwaggerLayoutPlugin from 'components/SwaggerUiLayout'\nimport PageWithSidebar from 'components/PageWithSidebar'\n\n// state\nimport { store } from 'services/state.js'\nimport { observer } from 'mobx-react'\n\nexport default observer(class ApisPage extends React.Component {\n  containerRef = React.createRef()\n  hasRoot = false\n\n  componentDidMount () { this.updateApi(true) }\n  componentDidUpdate () { this.updateApi(false) }\n  componentWillUnmount () { this.containerRef = null }\n\n  updateApi (isInitial) {\n    return getApi(this.props.match.params.apiId || 'ANY', true, this.props.match.params.stage, isInitial)\n      .then(api => {\n        if (this.containerRef == null) return\n        const elem = this.containerRef.current\n        const isFirstLoad = !this.hasRoot\n\n        this.hasRoot = elem != null\n        if (api && elem != null) {\n          const cell = {\n            shouldPreauthorizeApiKey: false,\n            preauthorizeApiKey: () => {\n              cell.shouldPreauthorizeApiKey = true\n            }\n          }\n          const swaggerUiConfig = {\n            domNode: this.containerRef.current,\n            plugins: [SwaggerLayoutPlugin],\n            supportedSubmitMethods: [],\n            spec: api.swagger,\n            onComplete: () => cell.preauthorizeApiKey()\n          }\n          if (isRegistered()) {\n            delete swaggerUiConfig.supportedSubmitMethods\n          }\n\n          const uiHandler = SwaggerUI(swaggerUiConfig)\n          cell.preauthorizeApiKey = () => {\n            if (store.apiKey) {\n              uiHandler.preauthorizeApiKey('api_key', store.apiKey)\n            }\n          }\n          if (cell.shouldPreauthorizeApiKey) {\n            cell.preauthorizeApiKey()\n          }\n\n          if (isFirstLoad) return updateUsagePlansAndApisList(true)\n        }\n      })\n  }\n\n  render () {\n    let errorHeader\n    let errorBody\n\n    if (store.apiList.loaded) {\n      if (!store.apiList.apiGateway.length && !store.apiList.generic.length) {\n        errorHeader = 'No APIs Published'\n        errorBody = 'Your administrator hasn\\'t added any APIs to your account. Please contact them to publish an API.'\n      } else if (!store.api) {\n        errorHeader = 'No Such API'\n        errorBody = 'The selected API doesn\\'t exist.'\n      }\n    }\n\n    return (\n      <PageWithSidebar\n        sidebarContent={<ApisMenu path={this.props.match} activateFirst={true} />}\n        SidebarPusherProps={{ className: 'swagger-section' }}\n      >\n        <div className='swagger-ui-wrap' ref={this.containerRef} style={{ padding: '0 20px' }}>\n          {errorHeader && errorBody && (\n            <>\n              <Header as='h2' icon textAlign='center' style={{ padding: '40px 0px' }}>\n                <Icon name='warning sign' circular />\n                <Header.Content>{errorHeader}</Header.Content>\n              </Header>\n              <Container text textAlign='justified'>\n                <p>{errorBody}</p>\n              </Container>\n            </>\n          )}\n        </div>\n      </PageWithSidebar>\n    )\n  }\n})\n","import React, { useState } from 'react'\n\nexport const MessageList = ({ messages }) =>\n  messages.map(({ render, id }) => (\n    <React.Fragment key={id}>{render()}</React.Fragment>\n  ))\n\n/**\n * A Hook for operating a list of \"messages\" which should be self-dismissable.\n * Returns `[messages, sendMessage]`, where:\n *    - `messages` is an array of messages, which should be provided as a prop\n *      to `MessageList` to be rendered\n *    - `sendMessage` is a function which accepts a renderer callback, and\n *      calls the callback to obtain a renderable message to append to\n *      `messages`. The renderer callback should accept a `dismiss` function as\n *      its sole argument, which removes the renderable message from `messages`\n *      when called.\n */\nexport const useMessages = () => {\n  const [state, setState] = useState({\n    messages: [],\n    nextId: 0\n  })\n\n  const sendMessage = renderWithDismiss => {\n    const id = state.nextId\n    const dismiss = () => {\n      setState(state => ({\n        ...state,\n        messages: state.messages.filter(message => message.id !== id)\n      }))\n    }\n    const newMessage = {\n      render: () => renderWithDismiss(dismiss),\n      id: state.nextId\n    }\n    setState(state => ({\n      messages: [...state.messages, newMessage],\n      nextId: state.nextId + 1\n    }))\n  }\n\n  const clearMessages = () => {\n    setState(state => ({ ...state, messages: [] }))\n  }\n\n  return [state.messages, sendMessage, clearMessages]\n}\n","import { apiGatewayClientWithCredentials as getApiGatewayClient } from 'services/api'\n\nconst getAccountsWithFilter = async filter => {\n  const apiGatewayClient = await getApiGatewayClient()\n  const response = await apiGatewayClient.get(\n    '/admin/accounts',\n    undefined,\n    undefined,\n    { queryParams: { filter } }\n  )\n  return response.data.accounts\n}\n\nconst url = ([first, ...rest], ...parts) =>\n  first + parts.map((p, i) => encodeURIComponent(p) + rest[i]).join('')\n\nconst fetch = (method, target, params = {}) =>\n  getApiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient[method](target, {}, params, {}))\n    .then(response => response.data)\n    .catch(error => { throw error && (error.data || error) })\n\nexport const fetchRegisteredAccounts = () => getAccountsWithFilter('registered')\nexport const fetchAdminAccounts = () => getAccountsWithFilter('admin')\nexport const fetchPendingRequestAccounts = () => getAccountsWithFilter('pendingRequest')\nexport const fetchPendingInviteAccounts = () => getAccountsWithFilter('pendingInvite')\n\nexport const deleteAccountByUserId = userId => fetch('delete', url`/admin/accounts/${userId}`)\n// TODO: verify if this is even correct - I suspect it should've posted to\n// `/admin/accounts/:userId/denyRequest` instead.\nexport const deleteInviteByUserId = userId => fetch('delete', url`/admin/accounts/${userId}`)\nexport const createInviteByEmail = email => fetch('post', '/admin/accounts', { targetEmailAddress: email })\nexport const resendInviteByEmail = email => fetch('put', '/admin/accounts/resendInvite', { targetEmailAddress: email })\nexport const promoteAccountByUserId = userId => fetch('put', url`/admin/accounts/${userId}/promoteToAdmin`)\nexport const approveAccountRequestByUserId = userId => fetch('put', url`/admin/accounts/${userId}/approveRequest`)\nexport const denyAccountRequestByUserId = userId => fetch('put', url`/admin/accounts/${userId}/denyRequest`)\n","import _ from 'lodash'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport {\n  Container,\n  Dropdown,\n  Icon,\n  Input,\n  Pagination,\n  Placeholder,\n  Table\n} from 'semantic-ui-react'\n\nimport styles from './AccountsTable.module.css'\n\nexport const DEFAULT_PAGE_SIZE = 10\n\nconst FILLER_ACCOUNT = Symbol('FILLER_ACCOUNT')\n\nconst NO_FILTER_COLUMN = Symbol('NO_FILTER_COLUMN')\nconst NO_FILTER_VALUE = ''\nconst NO_ORDER_COLUMN = Symbol('NO_ORDER_COLUMN')\n\nconst ORDER_DIRECTIONS = [\n  {\n    lodashDirection: undefined,\n    iconName: 'sort'\n  },\n  {\n    lodashDirection: 'asc',\n    iconName: 'sort up'\n  },\n  {\n    lodashDirection: 'desc',\n    iconName: 'sort down'\n  }\n]\n\nconst nextDirectionIndex = index => (index + 1) % ORDER_DIRECTIONS.length\n\nexport const ACCOUNT_ROW_PLACEHOLDER_TESTID = 'accountRowPlaceholder'\nexport const FILTER_DROPDOWN_TESTID = 'filterDropdown'\nexport const ACCOUNTS_TABLE_TESTID = 'accountsTable'\nexport const ACCOUNT_COLUMN_ID_DATA_ATTR = 'data-account-column-id'\n\n/**\n * A paginated table whose rows represent accounts.\n *\n * @param {Object} props\n * @param {Object[]} props.accounts\n *    all Account objects to display (before filtering)\n * @param {AccountsTableColumns~Descriptor[]} props.columns\n *    column descriptors\n * @param {boolean} props.loading\n *    if true, the table displays a loading state; if false, the table displays\n *    the given accounts\n * @param {Object} props.selectedAccount\n *    an Account object to highlight\n * @param onSelectAccount\n *    when the row corresponding to `account` is clicked, AccountsTable calls\n *    `onSelectAccount(account)`\n * @param children\n *    components to be placed in the actions section above the table\n */\nexport const AccountsTable = ({\n  accounts,\n  columns,\n  loading,\n  selectedAccount,\n  onSelectAccount,\n  children: toolbarActions\n}) => {\n  const pageSize = DEFAULT_PAGE_SIZE\n\n  const [accountsView, setAccountsView] = useState(accounts)\n  const [activePage, setActivePage] = useState(0)\n  const [activePageAccounts, setActivePageAccounts] = useState(\n    [...Array(pageSize)].fill(FILLER_ACCOUNT)\n  )\n\n  const [filterableColumns, setFilterableColumns] = useState([])\n  const [filter, setFilter] = useState({\n    column: NO_FILTER_COLUMN,\n    value: NO_FILTER_VALUE\n  })\n  const [order, setOrder] = useState({\n    column: NO_ORDER_COLUMN,\n    directionIndex: 0\n  })\n\n  /* eslint-disable brace-style */\n  useEffect(() => {\n    const filterableColumns = columns.filter(column => column.filtering)\n    setFilterableColumns(filterableColumns)\n\n    // Reset filtering state if no columns are filterable\n    if (filterableColumns.length === 0) {\n      setFilter({\n        column: NO_FILTER_COLUMN,\n        value: NO_FILTER_VALUE\n      })\n    }\n\n    // Pick the first filterable column if one is available\n    else if (filter.column === NO_FILTER_COLUMN) {\n      setFilter(filter => ({ ...filter, column: filterableColumns[0] }))\n    }\n\n    // Reset filterColumn if it's no longer among the available columns\n    else if (!filterableColumns.includes(filter.column)) {\n      setFilter(filter => ({ ...filter, column: NO_FILTER_COLUMN }))\n    }\n  }, [columns, filter])\n  /* eslint-enable brace-style */\n\n  /**\n   * Sets `accountsView` to the filtered and sorted subset of `props.accounts`.\n   */\n  useEffect(() => {\n    let view = _(accounts)\n\n    if (filter.value !== '' && filter.column !== NO_FILTER_COLUMN) {\n      const filterAccessor = filter.column.filtering.accessor\n      if (typeof filterAccessor === 'string') {\n        view = view.filter(\n          item =>\n            !!item[filterAccessor] &&\n            item[filterAccessor].toString().includes(filter.value)\n        )\n      } else if (typeof filterAccessor === 'function') {\n        view = view.filter(item => filterAccessor(item).includes(filter.value))\n      } else {\n        throw new Error(\n          `Invalid filtering accessor on column ${filter.column.id}`\n        )\n      }\n    }\n\n    if (order.column !== NO_ORDER_COLUMN) {\n      view = view.orderBy(\n        [order.column.ordering.iteratee],\n        [ORDER_DIRECTIONS[order.directionIndex].lodashDirection]\n      )\n    }\n\n    setAccountsView(view.value())\n  }, [accounts, filter, order])\n\n  /**\n   * Returns a page of accounts from `accountView` according to the given page\n   * number.\n   */\n  const computeAccountsPage = useCallback(\n    activePage => {\n      const start = activePage * pageSize\n      const pageItems = accountsView.slice(start, start + pageSize)\n      const fillerCount = pageSize - pageItems.length\n      if (fillerCount) {\n        pageItems.push(...Array(fillerCount).fill(FILLER_ACCOUNT))\n      }\n      return pageItems\n    },\n    [accountsView, pageSize]\n  )\n\n  const totalPages = Math.ceil(accountsView.length / pageSize)\n\n  const onPageChange = useCallback(\n    (_event, { activePage: newActivePage }) => {\n      // SemanticUI uses 1-indexing in Pagination. We prefer sanity.\n      --newActivePage\n      setActivePage(newActivePage)\n      setActivePageAccounts(computeAccountsPage(newActivePage, accountsView))\n      onSelectAccount(undefined)\n    },\n    [accountsView, onSelectAccount, computeAccountsPage]\n  )\n\n  useEffect(() => {\n    loading || onPageChange(undefined, { activePage: 1 })\n  }, [accounts, loading, onPageChange])\n\n  const tableRows = _.range(pageSize).map(index => {\n    if (loading) {\n      return <LoadingAccountRow key={index} columnCount={columns.length} />\n    }\n\n    const account = activePageAccounts[index]\n    return account === FILLER_ACCOUNT ? (\n      <FillerAccountRow key={index} columnCount={columns.length} />\n    ) : (\n      <AccountRow\n        account={account}\n        columns={columns}\n        isSelected={account === selectedAccount}\n        onSelect={onSelectAccount}\n        key={index}\n      />\n    )\n  })\n\n  const filterColumnDropdownOptions = filterableColumns.map(\n    ({ title, id }, index) => ({ key: index, text: title, value: id })\n  )\n\n  const onFilterColumnDropdownChange = (_event, { value }) =>\n    setFilter(filter => ({\n      ...filter,\n      column:\n        filterableColumns.find(column => column.id === value) ||\n        NO_FILTER_COLUMN\n    }))\n  const onSearchInputChange = (_event, { value }) =>\n    setFilter(filter => ({ ...filter, value }))\n\n  const toolbar = (\n    <>\n      <div\n        style={{ float: 'left', marginBottom: '1rem', paddingRight: '1rem' }}\n      >\n        {filterableColumns.length > 0 && (\n          <Input\n            iconPosition='left'\n            icon='search'\n            placeholder='Search by...'\n            value={filter.value}\n            onChange={onSearchInputChange}\n            style={{ maxWidth: '24em' }}\n          />\n        )}\n      </div>\n      <div\n        style={{ float: 'left', marginBottom: '1rem', paddingRight: '1rem' }}\n      >\n        <Dropdown\n          onChange={onFilterColumnDropdownChange}\n          options={filterColumnDropdownOptions}\n          selection\n          value={filter.column.id}\n          data-testid={FILTER_DROPDOWN_TESTID}\n        />\n      </div>\n      <div style={{ float: 'right', marginBottom: '1rem' }}>\n        {toolbarActions}\n      </div>\n    </>\n  )\n\n  const table = (\n    <Table selectable={!loading} data-testid={ACCOUNTS_TABLE_TESTID}>\n      <TableHeader columns={columns} order={order} setOrder={setOrder} />\n      <Table.Body>{tableRows}</Table.Body>\n      <Table.Footer>\n        <Table.Row>\n          <Table.HeaderCell colSpan={columns.length}>\n            <Container fluid textAlign='right'>\n              <Pagination\n                // SemanticUI uses 1-indexing in Pagination. We prefer sanity.\n                activePage={activePage + 1}\n                onPageChange={onPageChange}\n                totalPages={totalPages}\n              />\n            </Container>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  )\n\n  return (\n    <Container fluid>\n      {toolbar}\n      {table}\n    </Container>\n  )\n}\n\nconst TableHeader = React.memo(({ columns, order, setOrder }) => {\n  // Clicking on a column makes it the \"order column\". If that column was\n  // already the \"order column\", cycle between order directions (none,\n  // ascending, descending). Otherwise, start at the beginning of the cycle\n  // (ascending).\n  const onToggleOrder = column => () => {\n    const nextOrder = { ...order }\n\n    if (column === order.column) {\n      const nextIndex = nextDirectionIndex(order.directionIndex)\n      if (nextIndex === 0) {\n        nextOrder.column = NO_ORDER_COLUMN\n      }\n      nextOrder.directionIndex = nextIndex\n    } else {\n      nextOrder.column = column\n      nextOrder.directionIndex = nextDirectionIndex(0)\n    }\n\n    setOrder(nextOrder)\n  }\n\n  const orderDirection = ORDER_DIRECTIONS[order.directionIndex]\n  return (\n    <Table.Header>\n      <Table.Row className={styles.headerRow}>\n        {columns.map((column, index) => (\n          <Table.HeaderCell\n            key={index}\n            onClick={column.ordering && onToggleOrder(column)}\n          >\n            {column.title}\n            {column === order.column && <Icon name={orderDirection.iconName} />}\n            {column.ordering && column !== order.column && (\n              <Icon name={ORDER_DIRECTIONS[0].iconName} disabled />\n            )}\n          </Table.HeaderCell>\n        ))}\n      </Table.Row>\n    </Table.Header>\n  )\n})\n\nconst LoadingAccountRow = React.memo(({ columnCount }) => (\n  <Table.Row>\n    {Array.from({ length: columnCount }).map((_value, index) => (\n      <Table.Cell key={index}>\n        <Placeholder data-testid={ACCOUNT_ROW_PLACEHOLDER_TESTID} fluid>\n          &nbsp;\n        </Placeholder>\n      </Table.Cell>\n    ))}\n  </Table.Row>\n))\n\nconst FillerAccountRow = React.memo(({ columnCount }) => (\n  <Table.Row>\n    {Array.from({ length: columnCount }).map((_value, index) => (\n      <Table.Cell key={index}>&nbsp;</Table.Cell>\n    ))}\n  </Table.Row>\n))\n\nconst AccountRow = React.memo(({ account, columns, isSelected, onSelect }) => {\n  return (\n    <Table.Row active={isSelected} onClick={() => onSelect(account)}>\n      {columns.map(({ id, render }, index) => (\n        <Table.Cell {...{ [ACCOUNT_COLUMN_ID_DATA_ATTR]: id }} key={index}>\n          {render(account)}\n        </Table.Cell>\n      ))}\n    </Table.Row>\n  )\n})\n","/**\n * An AccountsTable column descriptor.\n *\n * @typedef {Object} AccountsTableColumns~Descriptor\n * @property {string} id\n *    a unique ID to distinguish this column from others\n * @property {string} title\n *    column title to show in the header row\n * @property {Function} render\n *    accepts an Account object, and returns content to be placed in the table\n *    cell in this column\n * @property {(Object|undefined)} ordering\n *    ordering descriptor for this column. If absent, the user cannot order on\n *    this column.\n * @property ordering.iteratee\n *    a lodash iteratee, used with `lodash.orderBy`\n * @property {(Object|undefined)} filtering\n *    filtering descriptor for this column. If absent, the user cannot filter\n *    on this column.\n * @property {string} filtering.accessor\n *    either an Account object property name, or a function which takes an\n *    Account object and returns a string, on which to filter\n */\n\nexport const EmailAddress = {\n  id: 'EmailAddress',\n  title: 'Email address',\n  render: account => account.EmailAddress,\n  ordering: {\n    iteratee: 'EmailAddress'\n  },\n  filtering: {\n    accessor: 'EmailAddress'\n  }\n}\n\nexport const IsAdmin = {\n  id: 'IsAdmin',\n  title: 'Administrator',\n  render: account => account.IsAdmin ? 'Yes' : 'No',\n  ordering: {\n    iteratee: 'IsAdmin'\n  },\n  filtering: {\n    accessor: 'IsAdmin'\n  }\n}\n\nexport const DateRegistered = {\n  id: 'DateRegistered',\n  title: 'Date registered',\n  render: account => formatDate(account.DateRegistered),\n  ordering: {\n    iteratee: 'DateRegistered'\n  }\n}\n\nexport const RegistrationMethod = {\n  id: 'RegistrationMethod',\n  title: 'Registration method',\n  render: account => account.RegistrationMethod\n}\n\nexport const ApiKeyId = {\n  id: 'ApiKeyId',\n  title: 'API key ID',\n  render: account => account.ApiKeyId,\n  filtering: {\n    accessor: 'ApiKeyId'\n  }\n}\n\nexport const Promoter = {\n  id: 'Promoter',\n  title: 'Promoter',\n  render: ({ PromoterUserId, PromoterEmailAddress }) =>\n    PromoterUserId ? `${PromoterEmailAddress} (${PromoterUserId})` : '',\n  filtering: {\n    accessor: ({ PromoterUserId, PromoterEmailAddress }) =>\n      PromoterUserId ? `${PromoterEmailAddress} ${PromoterUserId}` : ''\n  }\n}\n\nexport const Inviter = {\n  id: 'Inviter',\n  title: 'Inviter',\n  render: ({ InviterUserId, InviterEmailAddress }) =>\n    InviterUserId ? `${InviterEmailAddress} (${InviterUserId})` : '',\n  filtering: {\n    accessor: ({ InviterUserId, InviterEmailAddress }) =>\n      InviterUserId ? `${InviterEmailAddress} ${InviterUserId}` : ''\n  }\n}\n\nexport const DatePromoted = {\n  id: 'DatePromoted',\n  title: 'Date promoted',\n  render: ({ DatePromoted }) => (DatePromoted ? formatDate(DatePromoted) : ''),\n  ordering: {\n    iteratee: 'DatePromoted'\n  }\n}\n\nexport const DateRequested = {\n  id: 'DateRequested',\n  title: 'Date requested',\n  render: account => formatDate(account.DateRequested),\n  ordering: {\n    iteratee: 'DateRequested'\n  }\n}\n\nexport const DateInvited = {\n  id: 'DateInvited',\n  title: 'Date invited',\n  render: account => formatDate(account.DateInvited),\n  ordering: {\n    iteratee: 'DateInvited'\n  }\n}\n\nconst DATE_TIME_FORMATTER = new Intl.DateTimeFormat('default', {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric'\n})\n\nconst formatDate = isoDateString =>\n  DATE_TIME_FORMATTER.format(new Date(isoDateString))\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Button, Container, Header, Message, Modal } from 'semantic-ui-react'\n\nimport * as MessageList from 'components/MessageList'\nimport * as AccountService from 'services/accounts'\nimport * as AccountsTable from 'components/Admin/Accounts/AccountsTable'\nimport * as AccountsTableColumns from 'components/Admin/Accounts/AccountsTableColumns'\nimport { store } from 'services/state'\nimport _ from 'lodash'\n\nconst RegisteredAccounts = () => {\n  const [accounts, setAccounts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedAccount, setSelectedAccount] = useState(undefined)\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false)\n  const [promoteModalOpen, setPromoteModalOpen] = useState(false)\n  const [messages, sendMessage] = MessageList.useMessages()\n\n  const refreshAccounts = async () => {\n    const [all, admins] = await Promise.all([\n      AccountService.fetchRegisteredAccounts(),\n      AccountService.fetchAdminAccounts()\n    ])\n\n    const allMap = {}\n\n    all.forEach(user => { allMap[user.UserId] = user })\n    admins.forEach(admin => {\n      admin.IsAdmin = true\n      if (admin.EmailAddress === store.user.email) {\n        admin.EmailAddress += ' (you)'\n      }\n      allMap[admin.UserId] = admin\n    })\n\n    return setAccounts(Object.values(allMap))\n  }\n\n  const isYou = (user) => {\n    return (_.get(store, 'user.email') + ' (you)') === user.EmailAddress\n  }\n\n  // Initial load\n  useEffect(() => {\n    refreshAccounts().finally(() => setLoading(false))\n  }, [])\n\n  const onSelectAccount = useCallback(account => setSelectedAccount(account), [\n    setSelectedAccount\n  ])\n\n  const onConfirmDelete = useCallback(async () => {\n    setLoading(true)\n    setDeleteModalOpen(false)\n    try {\n      await AccountService.deleteAccountByUserId(selectedAccount.UserId)\n      sendMessage(dismiss => (\n        <DeleteSuccessMessage account={selectedAccount} dismiss={dismiss} />\n      ))\n      await refreshAccounts()\n    } catch (error) {\n      sendMessage(dismiss => (\n        <DeleteFailureMessage\n          account={selectedAccount}\n          dismiss={dismiss}\n          errorMessage={error.message}\n        />\n      ))\n    } finally {\n      setLoading(false)\n    }\n  }, [sendMessage, selectedAccount])\n\n  const onConfirmPromote = useCallback(async () => {\n    setLoading(true)\n    setPromoteModalOpen(false)\n    try {\n      await AccountService.promoteAccountByUserId(selectedAccount.UserId)\n      sendMessage(dismiss => (\n        <PromoteSuccessMessage account={selectedAccount} dismiss={dismiss} />\n      ))\n      await refreshAccounts()\n    } catch (error) {\n      sendMessage(dismiss => (\n        <PromoteFailureMessage\n          account={selectedAccount}\n          dismiss={dismiss}\n          errorMessage={error.message}\n        />\n      ))\n    } finally {\n      setLoading(false)\n    }\n  }, [sendMessage, selectedAccount])\n\n  return (\n    <Container fluid style={{ padding: '2em' }}>\n      <Header as='h1'>Registered accounts</Header>\n      <MessageList.MessageList messages={messages} />\n      <AccountsTable.AccountsTable\n        accounts={accounts}\n        columns={[\n          AccountsTableColumns.EmailAddress,\n          AccountsTableColumns.IsAdmin,\n          AccountsTableColumns.DateRegistered,\n          AccountsTableColumns.RegistrationMethod,\n          AccountsTableColumns.ApiKeyId\n        ]}\n        loading={loading}\n        selectedAccount={selectedAccount}\n        onSelectAccount={onSelectAccount}\n      >\n        <TableActions\n          canDelete={!loading && selectedAccount && !isYou(selectedAccount)}\n          onClickDelete={() => setDeleteModalOpen(true)}\n          canPromote={!loading && selectedAccount}\n          isAdmin={selectedAccount && selectedAccount.IsAdmin}\n          onClickPromote={() => setPromoteModalOpen(true)}\n        />\n      </AccountsTable.AccountsTable>\n      <DeleteAccountModal\n        account={selectedAccount}\n        onConfirm={onConfirmDelete}\n        open={deleteModalOpen}\n        isAdmin={selectedAccount && selectedAccount.IsAdmin}\n        onClose={() => setDeleteModalOpen(false)}\n      />\n      <PromoteAccountModal\n        account={selectedAccount}\n        onConfirm={onConfirmPromote}\n        open={promoteModalOpen}\n        onClose={() => setPromoteModalOpen(false)}\n      />\n    </Container>\n  )\n}\nexport default RegisteredAccounts\n\nconst TableActions = React.memo(\n  ({ canDelete, onClickDelete, canPromote, onClickPromote, isAdmin }) => (\n    <Button.Group>\n      <Button content='Delete' disabled={!canDelete} onClick={onClickDelete} />\n      <Button\n        content='Promote to Admin'\n        disabled={!canPromote || isAdmin}\n        onClick={onClickPromote}\n      />\n    </Button.Group>\n  )\n)\n\nconst DeleteAccountModal = React.memo(\n  ({ account, onConfirm, open, onClose, isAdmin }) =>\n    account && (\n      <Modal size='small' open={open} onClose={onClose}>\n        <Modal.Header>Delete account</Modal.Header>\n        <Modal.Content>\n          {isAdmin && (\n            <Message negative>\n              <Message.Header>Danger! This is an admin account.</Message.Header>\n              <p><strong>Deleting an admin account could cause temporary loss of access and temporary inability to configure the developer portal.</strong></p>\n            </Message>\n          )}\n          <p>\n            Are you sure you want to delete the account <strong>{account.EmailAddress}</strong>, and de-activate the             associated API key? This action is irreversible.\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={onClose}>Cancel</Button>\n          <Button negative onClick={onConfirm}>\n            Delete\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n)\n\nconst PromoteAccountModal = React.memo(\n  ({ account, onConfirm, open, onClose }) =>\n    account && (\n      <Modal size='small' open={open} onClose={onClose}>\n        <Modal.Header>Confirm promotion</Modal.Header>\n        <Modal.Content>\n          <p>\n            Are you sure you want to promote the account{' '}\n            <strong>{account.EmailAddress}</strong> to Admin? This will allow\n            the account to perform any Admin actions, including deleting and\n            promoting other accounts.\n          </p>\n          <p>\n            Only the owner of the Developer Portal can demote the account,\n            through the Cognito console.\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={onClose}>Cancel</Button>\n          <Button negative onClick={onConfirm}>\n            Promote\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n)\n\nconst DeleteSuccessMessage = React.memo(({ account, dismiss }) => (\n  <Message onDismiss={dismiss} positive>\n    <Message.Content>\n      Deleted account <strong>{account.EmailAddress}</strong>.\n    </Message.Content>\n  </Message>\n))\n\nconst DeleteFailureMessage = React.memo(\n  ({ account, errorMessage, dismiss }) => (\n    <Message onDismiss={dismiss} negative>\n      <Message.Content>\n        <p>\n          Failed to delete account <strong>{account.EmailAddress}</strong>.\n        </p>\n        {errorMessage && <p>Error message: {errorMessage}</p>}\n      </Message.Content>\n    </Message>\n  )\n)\n\nconst PromoteSuccessMessage = React.memo(({ account, dismiss }) => (\n  <Message onDismiss={dismiss} positive>\n    <Message.Content>\n      Promoted account <strong>{account.EmailAddress}</strong>.\n    </Message.Content>\n  </Message>\n))\n\nconst PromoteFailureMessage = React.memo(\n  ({ account, errorMessage, dismiss }) => (\n    <Message onDismiss={dismiss} negative>\n      <Message.Content>\n        <p>\n          Failed to promote account <strong>{account.EmailAddress}</strong>.\n        </p>\n        {errorMessage && <p>Error message: {errorMessage}</p>}\n      </Message.Content>\n    </Message>\n  )\n)\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Container, Header } from 'semantic-ui-react'\n\nimport * as AccountService from 'services/accounts'\nimport * as AccountsTable from 'components/Admin/Accounts/AccountsTable'\nimport * as AccountsTableColumns from 'components/Admin/Accounts/AccountsTableColumns'\n\nconst AdminAccounts = () => {\n  const [accounts, setAccounts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedAccount, setSelectedAccount] = useState(undefined)\n\n  const refreshAccounts = () =>\n    AccountService.fetchAdminAccounts().then(accounts =>\n      setAccounts(accounts)\n    )\n\n  // Initial load\n  useEffect(() => {\n    refreshAccounts().finally(() => setLoading(false))\n  }, [])\n\n  const onSelectAccount = useCallback(account => setSelectedAccount(account), [\n    setSelectedAccount\n  ])\n\n  return (\n    <Container fluid style={{ padding: '2em' }}>\n      <Header as='h1'>Admin accounts</Header>\n      <AccountsTable.AccountsTable\n        accounts={accounts}\n        columns={[\n          AccountsTableColumns.EmailAddress,\n          AccountsTableColumns.DatePromoted,\n          AccountsTableColumns.Promoter\n        ]}\n        loading={loading}\n        selectedAccount={selectedAccount}\n        onSelectAccount={onSelectAccount}\n      />\n    </Container>\n  )\n}\nexport default AdminAccounts\n","import { useState, useCallback } from 'react'\n\n/**\n * A React state hook wrapping a boolean value, returning `setTrue` and\n * `setFalse` functions which do as their names suggest. Returns `[state,\n * setTrue, setFalse, setState]`, in which the first and last functions\n * correspond to those returned by `useState`, and in which all functions (i.e.\n * all but `state`) are stable.\n *\n * This is especially useful for controlled modals, for example, which may\n * close themselves via a callback:\n * ```javascript\n * const [isOpen, open, close] = useBoolean(false)\n * return (<Modal isOpen={isOpen} closeSelf={close}> ... </Modal>)\n * ```\n */\nexport const useBoolean = initialState => {\n  const [state, setState] = useState(initialState)\n  const setTrue = useCallback(() => setState(true), [])\n  const setFalse = useCallback(() => setState(false), [])\n  return [state, setTrue, setFalse, setState]\n}\n","import React, { useCallback, useEffect, useMemo, useState, useRef } from 'react'\nimport {\n  Button,\n  Container,\n  Header,\n  Input,\n  Message,\n  Modal\n} from 'semantic-ui-react'\n\nimport * as MessageList from 'components/MessageList'\nimport * as AccountService from 'services/accounts'\nimport * as AccountsTable from 'components/Admin/Accounts/AccountsTable'\nimport * as AccountsTableColumns from 'components/Admin/Accounts/AccountsTableColumns'\n\nimport { useBoolean } from 'utils/use-boolean'\n\nconst PendingInvites = () => {\n  const [accounts, setAccounts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedAccount, setSelectedAccount] = useState(undefined)\n  const [isCreateModalOpen, openCreateModal, closeCreateModal] = useBoolean(\n    false\n  )\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useBoolean(\n    false\n  )\n  const [messages, sendMessage] = MessageList.useMessages()\n  const [\n    createModalMessages,\n    sendCreateModalMessage,\n    clearCreateModalMessages\n  ] = MessageList.useMessages()\n\n  const refreshAccounts = () =>\n    AccountService.fetchPendingInviteAccounts().then(accounts =>\n      setAccounts(accounts)\n    )\n\n  // Initial load\n  useEffect(() => {\n    refreshAccounts().finally(() => setLoading(false))\n  }, [])\n\n  const onSelectAccount = useCallback(\n    account => setSelectedAccount(account),\n    []\n  )\n\n  const onConfirmCreate = useCallback(\n    async emailAddress => {\n      setLoading(true)\n      clearCreateModalMessages()\n      try {\n        await AccountService.createInviteByEmail(emailAddress)\n      } catch (error) {\n        sendCreateModalMessage(dismiss => (\n          <CreateFailureMessage\n            emailAddress={emailAddress}\n            dismiss={dismiss}\n            errorMessage={error.message}\n          />\n        ))\n        setLoading(false)\n        return false\n      }\n      closeCreateModal()\n      clearCreateModalMessages()\n      sendMessage(dismiss => (\n        <CreateSuccessMessage emailAddress={emailAddress} dismiss={dismiss} />\n      ))\n      // Don't need to wait for this\n      refreshAccounts().then(() => setLoading(false))\n      return true\n    },\n    [\n      sendMessage,\n      sendCreateModalMessage,\n      clearCreateModalMessages,\n      closeCreateModal\n    ]\n  )\n\n  const onConfirmResend = useCallback(async () => {\n    setLoading(true)\n    try {\n      await AccountService.resendInviteByEmail(selectedAccount.EmailAddress)\n      sendMessage(dismiss => (\n        <ResendSuccessMessage account={selectedAccount} dismiss={dismiss} />\n      ))\n    } catch (error) {\n      sendMessage(dismiss => (\n        <ResendFailureMessage account={selectedAccount} dismiss={dismiss} />\n      ))\n    } finally {\n      setLoading(false)\n    }\n  }, [sendMessage, selectedAccount])\n\n  const onConfirmDelete = useCallback(async () => {\n    setLoading(true)\n    closeDeleteModal()\n    try {\n      await AccountService.deleteInviteByUserId(selectedAccount.UserId)\n      sendMessage(dismiss => (\n        <DeleteSuccessMessage account={selectedAccount} dismiss={dismiss} />\n      ))\n      await refreshAccounts()\n    } catch (error) {\n      sendMessage(dismiss => (\n        <DeleteFailureMessage\n          account={selectedAccount}\n          dismiss={dismiss}\n          errorMessage={error.message}\n        />\n      ))\n    } finally {\n      setLoading(false)\n    }\n  }, [sendMessage, selectedAccount, closeDeleteModal])\n\n  return (\n    <Container fluid style={{ padding: '2em' }}>\n      <Header as='h1'>Pending invites</Header>\n      <MessageList.MessageList messages={messages} />\n      <AccountsTable.AccountsTable\n        accounts={accounts}\n        columns={[\n          AccountsTableColumns.EmailAddress,\n          AccountsTableColumns.DateInvited,\n          AccountsTableColumns.Inviter\n        ]}\n        loading={loading}\n        selectedAccount={selectedAccount}\n        onSelectAccount={onSelectAccount}\n      >\n        <TableActions\n          canCreate={!loading}\n          onClickCreate={openCreateModal}\n          canResend={!loading && selectedAccount}\n          onClickResend={onConfirmResend}\n          canDelete={!loading && selectedAccount}\n          onClickDelete={openDeleteModal}\n        />\n      </AccountsTable.AccountsTable>\n      <CreateInviteModal\n        onConfirm={onConfirmCreate}\n        open={isCreateModalOpen}\n        onClose={closeCreateModal}\n        messages={createModalMessages}\n      />\n      <DeleteInviteModal\n        account={selectedAccount}\n        onConfirm={onConfirmDelete}\n        open={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n      />\n    </Container>\n  )\n}\nexport default PendingInvites\n\nconst TableActions = ({\n  canCreate,\n  onClickCreate,\n  canResend,\n  onClickResend,\n  canDelete,\n  onClickDelete\n}) => (\n  <Button.Group>\n    <Button\n      content='Create invite...'\n      disabled={!canCreate}\n      onClick={onClickCreate}\n    />\n    <Button content='Resend' disabled={!canResend} onClick={onClickResend} />\n    <Button content='Delete' disabled={!canDelete} onClick={onClickDelete} />\n  </Button.Group>\n)\n\n// Pulled from https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type%3Demail) and\n// optimized in a few ways for size:\n// - Classes of `[A-Za-z0-9]` were shortened to the equivalent `[^_\\W]`.\n// - Other instances of `0-9` in classes were converted to the shorthand `\\d`.\n// - The whole regexp was made case-insensitive to avoid the need for `A-Za-z` in classes.\n// - As we're only testing, I replaced all the non-capturing groups with capturing ones.\nconst validEmailRegex =\n  /^[\\w.!#$%&'*+/=?^`{|}~-]+@[^_\\W]([a-z\\d-]{0,61}[^_\\W])?(\\.[^_\\W]([a-z\\d-]{0,61}[^_\\W])?)*$/i\n\n/*\n * Note: `onConfirm` should return a boolean indicating whether the creation\n * succeeded.\n */\nconst CreateInviteModal = ({ onConfirm, open, onClose, messages }) => {\n  const [email, setEmail] = useState('')\n  const [loading, setLoading] = useState(false)\n  const isEmailValid = useMemo(() => validEmailRegex.test(email), [email])\n  const onChangeEmailAddress = useCallback(\n    (_event, { value }) => setEmail(value),\n    []\n  )\n  const onClickCreate = useCallback(async () => {\n    setLoading(true)\n    try {\n      if (await onConfirm(email)) {\n        setEmail('')\n      }\n    } finally {\n      setLoading(false)\n    }\n  }, [onConfirm, email])\n\n  // If the user stops typing, but the email is invalid, show the invalid email message as a hint\n  // for why they can't proceed. Don't make the timeout so short that it'd annoy a slow typer,\n  // though.\n  const [needsAssistance, setNeedsAssistance] = useState(false)\n  const emailEverSet = useRef(false)\n\n  useEffect(() => {\n    if (email) emailEverSet.current = true\n    if (isEmailValid) {\n      setNeedsAssistance(false)\n    } else if (!needsAssistance && emailEverSet.current) {\n      const timer = setTimeout(() => { setNeedsAssistance(true) }, 3000 /* ms */)\n      return () => { clearTimeout(timer) }\n    }\n  }, [email, needsAssistance])\n\n  return (\n    <Modal open={open} onClose={onClose} size={'small'}>\n      <Modal.Header>Create invite</Modal.Header>\n      <Modal.Content>\n        <p>\n          Enter an email address below and select <strong>Create</strong> to\n          send an invitation to create an account.\n        </p>\n        <MessageList.MessageList messages={messages} />\n        <Message hidden={!needsAssistance || isEmailValid || loading} warning>\n          Please enter a valid email address.\n        </Message>\n        <Input\n          placeholder='Email address'\n          value={email}\n          onChange={onChangeEmailAddress}\n          disabled={loading}\n          style={{ width: '100%' }}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button disabled={loading} loading={loading} onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          positive\n          disabled={!isEmailValid}\n          loading={loading}\n          onClick={onClickCreate}\n        >\n          Create\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nconst DeleteInviteModal = ({ account, onConfirm, open, onClose }) =>\n  account ? (\n    <Modal size='small' open={open} onClose={onClose}>\n      <Modal.Header>Confirm invite deletion</Modal.Header>\n      <Modal.Content>\n        <p>\n          Are you sure you want to delete this account invite for{' '}\n          <strong>{account.EmailAddress}</strong>? This action is irreversible.\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button negative onClick={onConfirm}>\n          Delete\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  ) : null\n\nconst CreateSuccessMessage = ({ emailAddress, dismiss }) => (\n  <Message onDismiss={dismiss} positive>\n    <Message.Content>\n      Sent account invite to <strong>{emailAddress}</strong>.\n    </Message.Content>\n  </Message>\n)\n\nconst CreateFailureMessage = ({ emailAddress, errorMessage, dismiss }) => (\n  <Message onDismiss={dismiss} negative>\n    <Message.Content>\n      <p>\n        Failed to send account invite to <strong>{emailAddress}</strong>.\n      </p>\n      {errorMessage && <p>Error message: {errorMessage}</p>}\n    </Message.Content>\n  </Message>\n)\n\nconst ResendSuccessMessage = ({ account, dismiss }) => (\n  <Message onDismiss={dismiss} positive>\n    <Message.Content>\n      Resent account invite to <strong>{account.EmailAddress}</strong>.\n    </Message.Content>\n  </Message>\n)\n\nconst ResendFailureMessage = ({ account, errorMessage, dismiss }) => (\n  <Message onDismiss={dismiss} negative>\n    <Message.Content>\n      <p>\n        Failed to resend account invite to{' '}\n        <strong>{account.EmailAddress}</strong>.\n      </p>\n      {errorMessage && <p>Error message: {errorMessage}</p>}\n    </Message.Content>\n  </Message>\n)\n\nconst DeleteSuccessMessage = ({ account, dismiss }) => (\n  <Message onDismiss={dismiss} positive>\n    <Message.Content>\n      Deleted account invite for <strong>{account.EmailAddress}</strong>.\n    </Message.Content>\n  </Message>\n)\n\nconst DeleteFailureMessage = ({ account, errorMessage, dismiss }) => (\n  <Message onDismiss={dismiss} negative>\n    <Message.Content>\n      <p>\n        Failed to delete account invite for{' '}\n        <strong>{account.EmailAddress}</strong>.\n      </p>\n      {errorMessage && <p>Error message: {errorMessage}</p>}\n    </Message.Content>\n  </Message>\n)\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Redirect } from 'react-router-dom'\n\nimport { ApiManagement, SideNav } from './'\nimport { AdminRoute } from './../../'\nimport PageWithSidebar from 'components/PageWithSidebar'\n\nimport RegisteredAccounts from 'pages/Admin/Accounts/RegisteredAccounts'\nimport AdminAccounts from 'pages/Admin/Accounts/AdminAccounts'\nimport PendingInvites from 'pages/Admin/Accounts/PendingInvites'\n// import PendingRequests from 'pages/Admin/Accounts/PendingRequests'\n\nfunction RedirectToApiManagement () {\n  return <Redirect to='/admin/apis' />\n}\n\nexport class Admin extends Component {\n  render () {\n    return (\n      <Router>\n        <PageWithSidebar sidebarContent={<SideNav />}>\n          <>\n            <AdminRoute exact from='/admin' component={RedirectToApiManagement} />\n            <AdminRoute path='/admin/apis' component={ApiManagement} />\n            <AdminRoute exact path='/admin/accounts' component={RegisteredAccounts} />\n            <AdminRoute exact path='/admin/accounts/admins' component={AdminAccounts} />\n            <AdminRoute exact path='/admin/accounts/invites' component={PendingInvites} />\n            {/* <AdminRoute exact path='/admin/accounts/requests' component={PendingRequests} /> */}\n          </>\n        </PageWithSidebar>\n      </Router>\n    )\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\nimport { isAdmin } from 'services/self'\n\nimport { observer } from 'mobx-react'\n\nimport { Menu } from 'semantic-ui-react'\nimport Sidebar from 'components/Sidebar/Sidebar'\nimport SidebarHeader from 'components/Sidebar/SidebarHeader'\nimport MenuLink from 'components/MenuLink'\n\nexport const SideNav = observer(() => isAdmin() && (\n  <Sidebar>\n    <SidebarHeader>Admin</SidebarHeader>\n    <MenuLink to='/admin/apis'>APIs</MenuLink>\n    <MenuLink>\n      Accounts\n      <Menu.Menu>\n        <MenuLink to='/admin/accounts'>Users</MenuLink>\n        <MenuLink to='/admin/accounts/admins'>Admins</MenuLink>\n        <MenuLink to='/admin/accounts/invites'>Invites</MenuLink>\n        {/* <MenuLink to='/admin/accounts/requests'>Requests</MenuLink> */}\n      </Menu.Menu>\n    </MenuLink>\n  </Sidebar>\n))\n","import React from 'react'\n\nimport { Button, Loader, Table, Modal, Form, Message, Popup, Icon } from 'semantic-ui-react'\n\nimport { apiGatewayClientWithCredentials } from 'services/api'\nimport { getApi } from 'services/api-catalog'\nimport { store } from 'services/state'\n\nimport * as YAML from 'yamljs'\n\nimport hash from 'object-hash'\nimport { toJS } from 'mobx'\nimport { observer } from 'mobx-react'\n\nfunction getUsagePlanVisibility (usagePlan) {\n  let hasHidden = false\n  let hasVisible = false\n\n  for (const api of usagePlan.apis) {\n    if (api.visibility) {\n      if (hasHidden) return null\n      hasVisible = true\n    } else {\n      if (hasVisible) return null\n      hasHidden = true\n    }\n  }\n\n  return hasVisible\n}\n\nfunction removeFirst (array, item) {\n  const index = array.indexOf(item)\n  const result = array.slice()\n  result.splice(index, 1)\n  return result\n}\n\nexport const ApiManagement = observer(class ApiManagement extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      modalOpen: false,\n      errors: [],\n      // Simpler than implementing a multiset, and probably also faster.\n      // TODO: abstract this out. It's getting a bit out of hand.\n      plansDisplayToggling: [],\n      apisDisplayToggling: [],\n      apisUpdating: [],\n      apisDeleting: [],\n      apisTogglingSdks: []\n    }\n\n    this.fileInput = React.createRef()\n\n    this.tableSort = (first, second) => {\n      if (first.name !== second.name) {\n        return first.name.localeCompare(second.name)\n      } else {\n        return first.stage.localeCompare(second.stage)\n      }\n    }\n\n    this.genericTableSort = (firstIndex, secondIndex) => {\n      const list = store.visibility.generic\n\n      if (list[firstIndex].name !== list[secondIndex].name) {\n        list[firstIndex].name.localeCompare(list[secondIndex].name)\n      } else {\n        // compare by their index, which happens to be their id\n        return firstIndex.localeCompare(secondIndex)\n      }\n    }\n\n    this.usagePlanSort = (first, second) => {\n      if (first.name !== second.name) {\n        return first.name.localeCompare(second.name)\n      } else {\n        return first.id.localeCompare(second.id)\n      }\n    }\n  }\n\n  componentDidMount () {\n    this.getApiVisibility()\n  }\n\n  uploadAPISpec (event) {\n    event.preventDefault()\n\n    const files = this.fileInput.current.files\n    let swagger, swaggerObject, anyFailures\n\n    if (files.length > 0) {\n      this.setState(prev => ({ ...prev, errors: [] }))\n      ;[].forEach.call(files, file => {\n        const reader = new window.FileReader()\n\n        reader.onload = (e) => {\n          if (file.name.includes('yaml')) {\n            swaggerObject = YAML.parse(e.target.result)\n            swagger = JSON.stringify(swaggerObject)\n          } else {\n            swaggerObject = JSON.parse(e.target.result)\n            swagger = JSON.stringify(swaggerObject)\n          }\n\n          if (!(swaggerObject.info && swaggerObject.info.title)) {\n            anyFailures = true\n            this.setState(prev => ({ ...prev, errors: [...prev.errors, file.name] }))\n            return\n          }\n\n          if (anyFailures) {\n            return\n          }\n\n          apiGatewayClientWithCredentials()\n            .then((app) => app.post('/admin/catalog/visibility', {}, { swagger }, {}))\n            .then((res) => {\n              if (res.status === 200) {\n                this.getApiVisibility()\n                this.setState(prev => ({ ...prev, modalOpen: Boolean(anyFailures), errors: anyFailures ? prev.errors : [] }))\n              }\n            })\n        }\n        reader.readAsText(file)\n      })\n    }\n  }\n\n  deleteAPISpec (apiId) {\n    this.setState(({ apisDeleting }) => ({ apisDeleting: [...apisDeleting, apiId] }))\n    getApi(apiId, false, undefined, true).then(api => {\n      const _api = toJS(api)\n      const key = _api.stage ? `${_api.id}_${_api.stage}` : hash(_api.swagger)\n\n      apiGatewayClientWithCredentials()\n        .then(app => app.delete(`/admin/catalog/visibility/generic/${key}`, {}, {}, {}))\n        .then((res) => {\n          if (res.status === 200) this.getApiVisibility()\n        })\n        .then(() => this.setState(({ apisDeleting }) => ({ apisDeleting: removeFirst(apisDeleting, apiId) })))\n    })\n  }\n\n  getApiVisibility () {\n    apiGatewayClientWithCredentials()\n      .then(app => app.get('/admin/catalog/visibility', {}, {}, {}))\n      .then(res => {\n        if (res.status === 200) {\n          // console.log(`visibility: ${JSON.stringify(res.data, null, 2)}`)\n\n          const apiGateway = res.data.apiGateway\n          const generic = res.data.generic && Object.keys(res.data.generic)\n\n          // console.log(`generic: ${JSON.stringify(generic, null, 2)}`)\n          // console.log(`api gateway: ${JSON.stringify(apiGateway, null, 2)}`)\n\n          apiGateway.forEach(api => {\n            if (generic) {\n              generic.forEach(genApi => {\n                if (res.data.generic[`${genApi}`]) {\n                  if (\n                    res.data.generic[`${genApi}`].apiId === api.id &&\n                    res.data.generic[`${genApi}`].stage === api.stage\n                  ) {\n                    api.visibility = true\n                    delete res.data.generic[`${genApi}`]\n                  }\n                }\n              })\n            }\n          })\n\n          store.visibility = res.data\n        }\n      })\n  }\n\n  updateLocalApiGatewayApis (apisList, updatedApi, parity) {\n    const updatedApis = apisList.map(stateApi => {\n      if (stateApi.id === updatedApi.id && stateApi.stage === updatedApi.stage) {\n        if (parity !== undefined && (parity === true || parity === false)) {\n          stateApi.visibility = parity\n        } else {\n          stateApi.visibility = !stateApi.visibility\n        }\n      }\n      return stateApi\n    })\n\n    store.visibility = { generic: store.visibility.generic, apiGateway: updatedApis }\n  }\n\n  showApiGatewayApi (api) {\n    const apiId = api.stage ? `${api.id}_${api.stage}` : api.id\n    this.setState(({ apisDisplayToggling }) => ({ apisDisplayToggling: [...apisDisplayToggling, apiId] }))\n    apiGatewayClientWithCredentials()\n      .then(app => app.post('/admin/catalog/visibility', {}, { apiKey: `${api.id}_${api.stage}`, subscribable: `${api.subscribable}` }, {}))\n      .then((res) => {\n        this.setState(({ apisDisplayToggling }) => ({ apisDisplayToggling: removeFirst(apisDisplayToggling, apiId) }))\n        if (res.status === 200) {\n          this.updateLocalApiGatewayApis(store.visibility.apiGateway, api)\n        }\n      })\n  }\n\n  hideApiGatewayApi (api) {\n    if (!api.subscribable && !api.id && !api.stage) {\n      this.deleteAPISpec(api.genericId)\n    } else {\n      const apiId = api.stage ? `${api.id}_${api.stage}` : api.id\n      this.setState(({ apisDisplayToggling }) => ({ apisDisplayToggling: [...apisDisplayToggling, apiId] }))\n      apiGatewayClientWithCredentials()\n        .then(app => app.delete(`/admin/catalog/visibility/${api.id}_${api.stage}`, {}, {}, {}))\n        .then((res) => {\n          this.setState(({ apisDisplayToggling }) => ({ apisDisplayToggling: removeFirst(apisDisplayToggling, apiId) }))\n          if (res.status === 200) {\n            this.updateLocalApiGatewayApis(store.visibility.apiGateway, api)\n          }\n        })\n    }\n  }\n\n  showAllApiGatewayApis (usagePlan) {\n    // Only toggle APIs that aren't already shown.\n    const apiIds = usagePlan.apis.filter(api => !api.visibility).map(api => `${api.id}_${api.stage}`)\n    this.setState(({ plansDisplayToggling, apisDisplayToggling }) => ({\n      plansDisplayToggling: [...plansDisplayToggling, usagePlan.id],\n      apisDisplayToggling: [...apisDisplayToggling, ...apiIds]\n    }))\n    Promise.all(usagePlan.apis.map((api) =>\n      apiGatewayClientWithCredentials()\n        .then(app => app.post('/admin/catalog/visibility', {}, {\n          apiKey: `${api.id}_${api.stage}`,\n          subscribable: `${api.subscribable}`\n        }, {}))\n        .then(res => { res.api = api; return res })\n    )).then((promises) => {\n      this.setState(({ plansDisplayToggling, apisDisplayToggling }) => ({\n        plansDisplayToggling: removeFirst(plansDisplayToggling, usagePlan.id),\n        apisDisplayToggling: apiIds.reduce(removeFirst, apisDisplayToggling)\n      }))\n      promises.forEach((result) => {\n        if (result.status === 200) {\n          this.updateLocalApiGatewayApis(store.visibility.apiGateway, result.api, true)\n        }\n      })\n    })\n  }\n\n  hideAllApiGatewayApis (usagePlan) {\n    // Only toggle APIs that aren't already hidden.\n    const apiIds = usagePlan.apis.filter(api => api.visibility).map(api => `${api.id}_${api.stage}`)\n    this.setState(({ plansDisplayToggling, apisDisplayToggling }) => ({\n      plansDisplayToggling: [...plansDisplayToggling, usagePlan.id],\n      apisDisplayToggling: [...apisDisplayToggling, ...apiIds]\n    }))\n    Promise.all(usagePlan.apis.map((api) =>\n      apiGatewayClientWithCredentials()\n        .then(app => app.delete(`/admin/catalog/visibility/${api.id}_${api.stage}`, {}, {}, {}))\n        .then(res => { res.api = api; return res })\n    )).then((promises) => {\n      this.setState(({ plansDisplayToggling, apisDisplayToggling }) => ({\n        plansDisplayToggling: removeFirst(plansDisplayToggling, usagePlan.id),\n        apisDisplayToggling: apiIds.reduce(removeFirst, apisDisplayToggling)\n      }))\n      promises.forEach((result) => {\n        if (result.status === 200) {\n          this.updateLocalApiGatewayApis(store.visibility.apiGateway, result.api, false)\n        }\n      })\n    })\n  }\n\n  isTogglingPlanDisplay (usagePlan) {\n    return this.state.plansDisplayToggling.includes(usagePlan.id)\n  }\n\n  isTogglingApiDisplay (api) {\n    return this.state.apisDisplayToggling.includes(api.stage ? `${api.id}_${api.stage}` : api.id)\n  }\n\n  isUpdatingApiGatewayApi (api) {\n    return this.state.apisUpdating.includes(`${api.id}_${api.stage}`)\n  }\n\n  isRemovingUnmanagedApi (apiId) {\n    return this.state.apisDeleting.includes(apiId)\n  }\n\n  updateApiGatewayApi (api) {\n    this.setState(({ apisUpdating }) => ({\n      apisUpdating: [...apisUpdating, `${api.id}_${api.stage}`]\n    }))\n    apiGatewayClientWithCredentials()\n      .then(app => app.post('/admin/catalog/visibility', {}, { apiKey: `${api.id}_${api.stage}`, subscribable: `${api.subscribable}` }, {}))\n      .then(() => this.setState(({ apisUpdating }) => ({ apisUpdating: removeFirst(apisUpdating, `${api.id}_${api.stage}`) })))\n  }\n\n  isSdkGenerationConfigurable (api) {\n    return api.visibility\n  }\n\n  isTogglingSdkGeneration (api) {\n    return this.state.apisTogglingSdks.includes(`${api.id}_${api.stage}`)\n  }\n\n  toggleSdkGeneration (apisList, updatedApi) {\n    this.setState(({ apisTogglingSdks }) => ({\n      apisTogglingSdks: [...apisTogglingSdks, `${updatedApi.id}_${updatedApi.stage}`]\n    }))\n    apiGatewayClientWithCredentials()\n      .then(app => {\n        if (updatedApi.sdkGeneration) {\n          return app.delete(`/admin/catalog/${updatedApi.id}_${updatedApi.stage}/sdkGeneration`, {}, {}, {})\n        } else {\n          return app.put(`/admin/catalog/${updatedApi.id}_${updatedApi.stage}/sdkGeneration`, {}, {}, {})\n        }\n      })\n      .then(res => {\n        this.setState(({ apisTogglingSdks }) => ({ apisTogglingSdks: removeFirst(apisTogglingSdks, `${updatedApi.id}_${updatedApi.stage}`) }))\n        if (res.status === 200) {\n          const updatedApis = apisList.map(stateApi => {\n            if (stateApi.id === updatedApi.id && stateApi.stage === updatedApi.stage) {\n              stateApi.sdkGeneration = !stateApi.sdkGeneration\n            }\n            return stateApi\n          })\n\n          store.visibility.apiGateway = updatedApis\n        }\n      })\n  }\n\n  renderHeaderVisibilityButton (usagePlan) {\n    const usagePlanVisibility = getUsagePlanVisibility(usagePlan)\n\n    // Some APIs are visible, some are hidden. Show the current state (Partial, with a warning) and enable all on click\n    if (usagePlanVisibility == null) {\n      return (\n        <Popup\n          content='Users subscribed to any of the APIs in this usage plan will have a valid API key for all APIs in this usage plan, even those that are not visible!'\n          trigger={\n            <Button\n              basic\n              color='yellow'\n              style={{ backgroundColor: 'white', width: '100%', paddingLeft: '1em', paddingRight: '1em', minWidth: '88px' }}\n              onClick={() => this.showAllApiGatewayApis(usagePlan)}\n            >\n              {this.isTogglingPlanDisplay(usagePlan) ? <Loader active inline size='mini' /> : <>Partial <Icon name='warning sign' style={{ paddingLeft: '5px' }} /></>}\n            </Button>\n          }\n        />\n      )\n    }\n\n    // Either all APIs are visible or none are visible. Toggle this state on click.\n    return (\n      <Button\n        basic\n        color={usagePlanVisibility ? 'green' : 'red'}\n        style={{ backgroundColor: 'white', width: '100%' }}\n        onClick={() => {\n          if (usagePlanVisibility) this.hideAllApiGatewayApis(usagePlan)\n          else this.showAllApiGatewayApis(usagePlan)\n        }}\n      >\n        {this.isTogglingPlanDisplay(usagePlan) ? <Loader active inline size='mini' /> : usagePlanVisibility ? 'True' : 'False'}\n      </Button>\n    )\n  }\n\n  sortByUsagePlan () {\n    if (!store.visibility.apiGateway) { return this.renderNoApis() }\n\n    const usagePlans =\n      store.visibility.apiGateway\n        .filter((api) => api.usagePlanId)\n        .reduce((accumulator, api) => {\n          if (!accumulator.find((usagePlan) => api.usagePlanId === usagePlan.id)) {\n            accumulator.push({ id: api.usagePlanId, name: api.usagePlanName })\n          }\n          return accumulator\n        }, [])\n        .sort(this.usagePlanSort)\n        .map((usagePlan) => {\n          return { ...usagePlan, apis: store.visibility.apiGateway.filter((api) => api.usagePlanId === usagePlan.id).sort(this.tableSort) }\n        })\n    const unsubscribable =\n      store.visibility.apiGateway\n        .filter((api) => !api.usagePlanId)\n        .sort(this.tableSort)\n\n    return (\n      <>\n        {usagePlans.map(usagePlan => {\n          return (\n            <>\n              {this.renderHeader(usagePlan)}\n              {this.renderApiList(usagePlan.apis)}\n            </>\n          )\n        })}\n        <Table.Row style={{ backgroundColor: '#1678c2', color: 'white' }}>\n          <Table.Cell colSpan='6'>\n            <b>Not Subscribable</b> <i>No Usage Plan</i>\n          </Table.Cell>\n        </Table.Row>\n        {this.renderApiList(unsubscribable)}\n      </>\n    )\n  }\n\n  renderNoApis () {\n    return (\n      <Table.Row>\n        <Table.Cell colSpan='4'>\n          No APIs found\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n\n  renderHeader (usagePlan) {\n    return (\n      <Table.Row style={{ backgroundColor: '#1678c2', color: 'white' }}>\n        <Table.Cell colSpan='3'>\n          <b>{usagePlan && usagePlan.name}</b> <i>Usage Plan</i>\n        </Table.Cell>\n        <Table.Cell>\n          {this.renderHeaderVisibilityButton(usagePlan)}\n        </Table.Cell>\n        <Table.Cell colSpan='2'>\n          {/* Intentionally empty */}\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n\n  renderApiList (apis) {\n    return <>\n      {apis.filter(api => api.id !== window.config.restApiId).map(api => (\n        <React.Fragment key={api.stage ? `${api.id}_${api.stage}` : api.id}>\n          <Table.Row>\n            <Table.Cell collapsing>{api.name}</Table.Cell>\n            <Table.Cell>{api.stage}</Table.Cell>\n            <Table.Cell>{api.subscribable ? 'Subscribable' : 'Not Subscribable'}</Table.Cell>\n            <Table.Cell>\n              <Button\n                basic\n                color={api.visibility ? 'green' : 'red'}\n                style={{ width: '100%' }}\n                onClick={() => api.visibility ? this.hideApiGatewayApi(api) : this.showApiGatewayApi(api)}\n              >\n                {this.isTogglingApiDisplay(api) ? <Loader active inline size='mini' /> : api.visibility ? 'True' : 'False'}\n              </Button>\n            </Table.Cell>\n            <Table.Cell>\n              <Button\n                basic\n                color='blue'\n                disabled={!api.visibility}\n                style={{ width: '100%' }}\n                onClick={() => this.updateApiGatewayApi(api)}\n              >\n                {this.isUpdatingApiGatewayApi(api) ? <Loader active inline size='mini' /> : 'Update'}\n              </Button>\n            </Table.Cell>\n            <Table.Cell>\n              <Button\n                basic\n                // color={api.sdkGeneration ? 'green' : 'red'}\n                color='blue'\n                style={{ width: '100%' }}\n                disabled={!api.visibility || !this.isSdkGenerationConfigurable(api)}\n                onClick={() => this.toggleSdkGeneration(store.visibility.apiGateway, api)}\n              >\n                {this.isTogglingSdkGeneration(api) ? <Loader active inline size='mini' /> : api.sdkGeneration ? 'Enabled' : 'Disabled'}\n              </Button>\n            </Table.Cell>\n          </Table.Row>\n        </React.Fragment>\n      ))}\n    </>\n  }\n\n  render () {\n    return <>\n      <div style={{ display: 'flex', width: '100%' }}>\n        <div style={{ padding: '2em' }}>\n          <Table celled collapsing>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan='6'>API Gateway APIs</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell collapsing sorted='ascending'>API Name</Table.HeaderCell>\n                <Table.HeaderCell>Stage</Table.HeaderCell>\n                <Table.HeaderCell>API Type</Table.HeaderCell>\n                <Table.HeaderCell>Displayed</Table.HeaderCell>\n                <Table.HeaderCell>Update</Table.HeaderCell>\n                <Table.HeaderCell>Allow Generating SDKs</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {this.sortByUsagePlan()}\n            </Table.Body>\n          </Table>\n        </div>\n\n        <div style={{ padding: '2em' }}>\n          <Table celled collapsing>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan='4'>Generic APIs</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan='2'>\n                  <Modal\n                    closeIcon\n                    closeOnEscape\n                    closeOnDimmerClick\n                    onClose={() => this.setState((prev) => ({ ...prev, modalOpen: false }))}\n                    trigger={\n                      <Button floated='right' onClick={() => this.setState((prev) => ({ ...prev, modalOpen: true }))}>\n                        Add API\n                      </Button>\n                    }\n                    open={this.state.modalOpen}\n                  >\n                    <Modal.Header>Select .JSON, .YAML, or .YML files</Modal.Header>\n                    <Modal.Content>\n                      <>\n                        <Form onSubmit={(e) => this.uploadAPISpec(e)}>\n                          <Form.Field>\n                            <label htmlFor='files'>Select Files:</label>\n                            <input type='file' id='files' name='files' accept='.json,.yaml,.yml' multiple ref={this.fileInput} />\n                          </Form.Field>\n                          {!!this.state.errors.length &&\n                            <Message size='tiny' color='red' list={this.state.errors} header='These files are not parseable or do not contain an api title:' />}\n                          <br />\n                          <Button type='submit'>Upload</Button>\n                        </Form>\n                      </>\n                    </Modal.Content>\n                  </Modal>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell collapsing sorted='ascending'>API Name</Table.HeaderCell>\n                <Table.HeaderCell>Delete</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {store.visibility.generic\n                ? Object.keys(store.visibility.generic).sort(this.genericTableSort).map(apiId => (\n                  <Table.Row key={apiId}>\n                    <Table.Cell collapsing>{store.visibility.generic[apiId].name}</Table.Cell>\n                    <Table.Cell>\n                      <Button\n                        basic\n                        color='red'\n                        disabled={this.isRemovingUnmanagedApi(apiId)}\n                        onClick={() => this.deleteAPISpec(apiId)}\n                      >\n                        {this.isRemovingUnmanagedApi(apiId) ? <Loader active inline size='mini' /> : 'Delete'}\n                      </Button>\n                    </Table.Cell>\n                  </Table.Row>\n                ))\n                : (\n                  <Table.Row>\n                    <Table.Cell colSpan='4'>\n                      No APIs found\n                    </Table.Cell>\n                  </Table.Row>\n                )}\n            </Table.Body>\n          </Table>\n        </div>\n      </div>\n    </>\n  }\n})\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Menu, Image } from 'semantic-ui-react'\n\nimport {\n  isAdmin,\n  isAuthenticated,\n  isRegistered,\n  logout,\n  getLoginRedirectUrl\n} from 'services/self'\n\nimport { cognitoDomain, cognitoClientId } from '../services/api'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// components\nimport MenuLink from 'components/MenuLink'\nimport { store } from 'services/state'\n\nfunction getCognitoUrl (type) {\n  const redirectUri = getLoginRedirectUrl()\n  return `${cognitoDomain}/${type}?response_type=token&client_id=${cognitoClientId}&redirect_uri=${redirectUri}`\n}\n\nexport const NavBar = observer(\n  class NavBar extends React.Component {\n    render () {\n      const email = store.user && store.user.email\n      return <Menu inverted borderless attached style={{ flex: '0 0 auto' }} stackable>\n        <MenuLink to='/'>\n          <Image size='mini' src='/custom-content/nav-logo.png' style={{ paddingRight: '10px' }} />\n          {fragments.Home.title}\n        </MenuLink>\n\n        <MenuLink to='/getting-started'>{fragments.GettingStarted.title}</MenuLink>\n        <MenuLink to='/apis'>{fragments.APIs.title}</MenuLink>\n\n        <Menu.Menu position='right'>\n          {isAuthenticated() ? <>\n            {isAdmin() && <MenuLink to='/admin/apis'>Admin Panel</MenuLink>}\n            {isRegistered() && <MenuLink to='/dashboard'>My Dashboard</MenuLink>}\n            <MenuLink onClick={logout}>\n              <div style={{ display: 'flex', flexDirection: 'column', textAlign: 'center' }}>\n                {email && <span style={{ marginBottom: '.5rem' }}>\n                  {email}\n                </span>}\n                <span>\n                  Sign out\n                </span>\n              </div>\n            </MenuLink>\n          </> : <>\n            <MenuLink to={getCognitoUrl('login')}>Sign In</MenuLink>\n            <MenuLink to={getCognitoUrl('signup')}>Register</MenuLink>\n          </>}\n        </Menu.Menu>\n      </Menu>\n    }\n  }\n)\n\nexport default NavBar\n","import React from 'react'\nimport { Button, Form, Modal, TextArea, Message } from 'semantic-ui-react'\nimport { submitFeedback } from 'services/feedback'\n\nconst initialState = {\n  message: '',\n  formOpen: false,\n  feedbackSubmitted: false\n}\n\nclass Feedback extends React.PureComponent {\n  constructor (props) {\n    super(props)\n\n    this.state = initialState\n\n    this.handleOpenModal = () => {\n      this.setState({\n        formOpen: true\n      })\n    }\n\n    this.handleCloseModal = () => {\n      this.setState(initialState)\n    }\n\n    this.handleSubmit = () => {\n      const { message } = this.state\n      submitFeedback(message).then(() => {\n        this.setState({\n          feedbackSubmitted: true\n        })\n      })\n    }\n  }\n\n  render () {\n    const {\n      message,\n      formOpen,\n      feedbackSubmitted\n    } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        centered={false}\n        size='tiny'\n        open={formOpen}\n        onClose={this.handleCloseModal}\n        trigger={\n          <div style={{\n            display: 'block',\n            position: 'fixed',\n            top: '80%',\n            right: '-62px', // Adjusted for rotation\n            transform: 'rotate(90deg)'\n          }}\n          >\n            <Button\n              style={{\n                borderTopLeftRadius: '0',\n                borderTopRightRadius: '0'\n              }} onClick={this.handleOpenModal}\n            ><i className='envelope outline icon' />Got an opinion?\n            </Button>\n          </div>\n        }\n      >\n        <Modal.Header>Let us know!</Modal.Header>\n        <Modal.Content>\n          {!feedbackSubmitted &&\n            <Form>\n              <Form.Field>\n                <TextArea value={message} onChange={(e) => this.setState({ message: e.target.value })} />\n              </Form.Field>\n              <Button type='submit' positive onClick={this.handleSubmit}>Submit</Button>\n            </Form>}\n          {feedbackSubmitted &&\n            <Message positive>\n              <p>Thanks for your feedback</p>\n            </Message>}\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n\nexport default Feedback\n","import { apiGatewayClient } from './api'\n\nexport const submitFeedback = (message) => {\n  return apiGatewayClient()\n    .then(client => {\n      return client.post('/feedback', {}, { message }, {})\n    })\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// I'd prefer to do `/[\\p{L}\\p{M}\\p{N}]{2,}/giu`, but Firefox doesn't support Unicode property escapes.\n// This was generated with the aid of https://mothereff.in/regexpu + a Unicode category table, and\n// for code size uses `/[\\p{C}\\p{P}\\p{S}\\p{Z}]{2,}/gu` with the inner class manually edited to be\n// negated. Note that matches must be at least 2 characters long, and the regexp reflects this.\n\n// Also, ESLint incorrectly warns here about stuff, and it's basically binary anyways.\n// eslint-disable-next-line\nexport default /[^\\0-\\/:-@\\[-`\\{-\\xA9\\xAB-\\xB1\\xB4\\xB6-\\xB8\\xBB\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08BE-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2\\u09F3\\u09FA\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF3-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D04\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D64\\u0D65\\u0D79\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u1368\\u137D-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u206F\\u2072\\u2073\\u207A-\\u207E\\u208A-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A-\\u245F\\u249C-\\u24E9\\u2500-\\u2775\\u2794-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFC\\u2CFE\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u3191\\u3196-\\u319F\\u31BB-\\u31EF\\u3200-\\u321F\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DB6-\\u4DFF\\u9FF0-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7C7-\\uA7F6\\uA828-\\uA82F\\uA836-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB68-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF\\u{1000C}\\u{10027}\\u{1003B}\\u{1003E}\\u{1004E}\\u{1004F}\\u{1005E}-\\u{1007F}\\u{100FB}-\\u{10106}\\u{10134}-\\u{1013F}\\u{10179}-\\u{10189}\\u{1018C}-\\u{101FC}\\u{101FE}-\\u{1027F}\\u{1029D}-\\u{1029F}\\u{102D1}-\\u{102DF}\\u{102FC}-\\u{102FF}\\u{10324}-\\u{1032C}\\u{1034B}-\\u{1034F}\\u{1037B}-\\u{1037F}\\u{1039E}\\u{1039F}\\u{103C4}-\\u{103C7}\\u{103D0}\\u{103D6}-\\u{103FF}\\u{1049E}\\u{1049F}\\u{104AA}-\\u{104AF}\\u{104D4}-\\u{104D7}\\u{104FC}-\\u{104FF}\\u{10528}-\\u{1052F}\\u{10564}-\\u{105FF}\\u{10737}-\\u{1073F}\\u{10756}-\\u{1075F}\\u{10768}-\\u{107FF}\\u{10806}\\u{10807}\\u{10809}\\u{10836}\\u{10839}-\\u{1083B}\\u{1083D}\\u{1083E}\\u{10856}\\u{10857}\\u{10877}\\u{10878}\\u{1089F}-\\u{108A6}\\u{108B0}-\\u{108DF}\\u{108F3}\\u{108F6}-\\u{108FA}\\u{1091C}-\\u{1091F}\\u{1093A}-\\u{1097F}\\u{109B8}-\\u{109BB}\\u{109D0}\\u{109D1}\\u{10A04}\\u{10A07}-\\u{10A0B}\\u{10A14}\\u{10A18}\\u{10A36}\\u{10A37}\\u{10A3B}-\\u{10A3E}\\u{10A49}-\\u{10A5F}\\u{10A7F}\\u{10AA0}-\\u{10ABF}\\u{10AC8}\\u{10AE7}-\\u{10AEA}\\u{10AF0}-\\u{10AFF}\\u{10B36}-\\u{10B3F}\\u{10B56}\\u{10B57}\\u{10B73}-\\u{10B77}\\u{10B92}-\\u{10BA8}\\u{10BB0}-\\u{10BFF}\\u{10C49}-\\u{10C7F}\\u{10CB3}-\\u{10CBF}\\u{10CF3}-\\u{10CF9}\\u{10D28}-\\u{10D2F}\\u{10D3A}-\\u{10E5F}\\u{10E7F}-\\u{10EFF}\\u{10F28}-\\u{10F2F}\\u{10F55}-\\u{10FDF}\\u{10FF7}-\\u{10FFF}\\u{11047}-\\u{11051}\\u{11070}-\\u{1107E}\\u{110BB}-\\u{110CF}\\u{110E9}-\\u{110EF}\\u{110FA}-\\u{110FF}\\u{11135}\\u{11140}-\\u{11143}\\u{11147}-\\u{1114F}\\u{11174}\\u{11175}\\u{11177}-\\u{1117F}\\u{111C5}-\\u{111C8}\\u{111CD}-\\u{111CF}\\u{111DB}\\u{111DD}-\\u{111E0}\\u{111F5}-\\u{111FF}\\u{11212}\\u{11238}-\\u{1123D}\\u{1123F}-\\u{1127F}\\u{11287}\\u{11289}\\u{1128E}\\u{1129E}\\u{112A9}-\\u{112AF}\\u{112EB}-\\u{112EF}\\u{112FA}-\\u{112FF}\\u{11304}\\u{1130D}\\u{1130E}\\u{11311}\\u{11312}\\u{11329}\\u{11331}\\u{11334}\\u{1133A}\\u{11345}\\u{11346}\\u{11349}\\u{1134A}\\u{1134E}\\u{1134F}\\u{11351}-\\u{11356}\\u{11358}-\\u{1135C}\\u{11364}\\u{11365}\\u{1136D}-\\u{1136F}\\u{11375}-\\u{113FF}\\u{1144B}-\\u{1144F}\\u{1145A}-\\u{1145D}\\u{11460}-\\u{1147F}\\u{114C6}\\u{114C8}-\\u{114CF}\\u{114DA}-\\u{1157F}\\u{115B6}\\u{115B7}\\u{115C1}-\\u{115D7}\\u{115DE}-\\u{115FF}\\u{11641}-\\u{11643}\\u{11645}-\\u{1164F}\\u{1165A}-\\u{1167F}\\u{116B9}-\\u{116BF}\\u{116CA}-\\u{116FF}\\u{1171B}\\u{1171C}\\u{1172C}-\\u{1172F}\\u{1173C}-\\u{117FF}\\u{1183B}-\\u{1189F}\\u{118F3}-\\u{118FE}\\u{11900}-\\u{1199F}\\u{119A8}\\u{119A9}\\u{119D8}\\u{119D9}\\u{119E2}\\u{119E5}-\\u{119FF}\\u{11A3F}-\\u{11A46}\\u{11A48}-\\u{11A4F}\\u{11A9A}-\\u{11A9C}\\u{11A9E}-\\u{11ABF}\\u{11AF9}-\\u{11BFF}\\u{11C09}\\u{11C37}\\u{11C41}-\\u{11C4F}\\u{11C6D}-\\u{11C71}\\u{11C90}\\u{11C91}\\u{11CA8}\\u{11CB7}-\\u{11CFF}\\u{11D07}\\u{11D0A}\\u{11D37}-\\u{11D39}\\u{11D3B}\\u{11D3E}\\u{11D48}-\\u{11D4F}\\u{11D5A}-\\u{11D5F}\\u{11D66}\\u{11D69}\\u{11D8F}\\u{11D92}\\u{11D99}-\\u{11D9F}\\u{11DAA}-\\u{11EDF}\\u{11EF7}-\\u{11FBF}\\u{11FD5}-\\u{11FFF}\\u{1239A}-\\u{123FF}\\u{1246F}-\\u{1247F}\\u{12544}-\\u{12FFF}\\u{1342F}-\\u{143FF}\\u{14647}-\\u{167FF}\\u{16A39}-\\u{16A3F}\\u{16A5F}\\u{16A6A}-\\u{16ACF}\\u{16AEE}\\u{16AEF}\\u{16AF5}-\\u{16AFF}\\u{16B37}-\\u{16B3F}\\u{16B44}-\\u{16B4F}\\u{16B5A}\\u{16B62}\\u{16B78}-\\u{16B7C}\\u{16B90}-\\u{16E3F}\\u{16E97}-\\u{16EFF}\\u{16F4B}-\\u{16F4E}\\u{16F88}-\\u{16F8E}\\u{16FA0}-\\u{16FDF}\\u{16FE2}\\u{16FE4}-\\u{16FFF}\\u{187F8}-\\u{187FF}\\u{18AF3}-\\u{1AFFF}\\u{1B11F}-\\u{1B14F}\\u{1B153}-\\u{1B163}\\u{1B168}-\\u{1B16F}\\u{1B2FC}-\\u{1BBFF}\\u{1BC6B}-\\u{1BC6F}\\u{1BC7D}-\\u{1BC7F}\\u{1BC89}-\\u{1BC8F}\\u{1BC9A}-\\u{1BC9C}\\u{1BC9F}-\\u{1D164}\\u{1D16A}-\\u{1D16C}\\u{1D173}-\\u{1D17A}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D241}\\u{1D245}-\\u{1D2DF}\\u{1D2F4}-\\u{1D35F}\\u{1D379}-\\u{1D3FF}\\u{1D455}\\u{1D49D}\\u{1D4A0}\\u{1D4A1}\\u{1D4A3}\\u{1D4A4}\\u{1D4A7}\\u{1D4A8}\\u{1D4AD}\\u{1D4BA}\\u{1D4BC}\\u{1D4C4}\\u{1D506}\\u{1D50B}\\u{1D50C}\\u{1D515}\\u{1D51D}\\u{1D53A}\\u{1D53F}\\u{1D545}\\u{1D547}-\\u{1D549}\\u{1D551}\\u{1D6A6}\\u{1D6A7}\\u{1D6C1}\\u{1D6DB}\\u{1D6FB}\\u{1D715}\\u{1D735}\\u{1D74F}\\u{1D76F}\\u{1D789}\\u{1D7A9}\\u{1D7C3}\\u{1D7CC}\\u{1D7CD}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA9A}\\u{1DAA0}\\u{1DAB0}-\\u{1DFFF}\\u{1E007}\\u{1E019}\\u{1E01A}\\u{1E022}\\u{1E025}\\u{1E02B}-\\u{1E0FF}\\u{1E12D}-\\u{1E12F}\\u{1E13E}\\u{1E13F}\\u{1E14A}-\\u{1E14D}\\u{1E14F}-\\u{1E2BF}\\u{1E2FA}-\\u{1E7FF}\\u{1E8C5}\\u{1E8C6}\\u{1E8D7}-\\u{1E8FF}\\u{1E94C}-\\u{1E94F}\\u{1E95A}-\\u{1EC70}\\u{1ECAC}\\u{1ECB0}\\u{1ECB5}-\\u{1ED00}\\u{1ED2E}\\u{1ED3E}-\\u{1EDFF}\\u{1EE04}\\u{1EE20}\\u{1EE23}\\u{1EE25}\\u{1EE26}\\u{1EE28}\\u{1EE33}\\u{1EE38}\\u{1EE3A}\\u{1EE3C}-\\u{1EE41}\\u{1EE43}-\\u{1EE46}\\u{1EE48}\\u{1EE4A}\\u{1EE4C}\\u{1EE50}\\u{1EE53}\\u{1EE55}\\u{1EE56}\\u{1EE58}\\u{1EE5A}\\u{1EE5C}\\u{1EE5E}\\u{1EE60}\\u{1EE63}\\u{1EE65}\\u{1EE66}\\u{1EE6B}\\u{1EE73}\\u{1EE78}\\u{1EE7D}\\u{1EE7F}\\u{1EE8A}\\u{1EE9C}-\\u{1EEA0}\\u{1EEA4}\\u{1EEAA}\\u{1EEBC}-\\u{1F0FF}\\u{1F10D}-\\u{1FFFF}\\u{2A6D7}-\\u{2A6FF}\\u{2B735}-\\u{2B73F}\\u{2B81E}\\u{2B81F}\\u{2CEA2}-\\u{2CEAF}\\u{2EBE1}-\\u{2F7FF}\\u{2FA1E}-\\u{E00FF}\\u{E01F0}-\\u{10FFFF}]{2,}/giu\n","import React, { useState, useMemo } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { Menu, Search, Grid } from 'semantic-ui-react'\n\nimport { useObserver } from 'mobx-react'\nimport { store } from 'services/state'\n\nimport _ from 'lodash'\n\nimport ApisMenu from './ApisMenu'\nimport PageWithSidebar from 'components/PageWithSidebar'\nimport './ApiSearch.css'\nimport searchTermRegexp from 'utils/search-term-regexp'\n\nfunction prepareSearch (searchString) {\n  return Array.from(new Set(searchString.toLowerCase().match(searchTermRegexp)))\n}\n\nexport default function ApiSearch (props) {\n  const [value, setValue] = useState('')\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const isLoaded = useObserver(() => store.apiList != null && store.apiList.loaded)\n\n  // Easier than building an actual search index. (And client-side text search *sucks* massively.)\n  // TODO: replace this with a customized search eventually. At the very least, the Swagger API\n  // fields shouldn't be here, and\n  const dataSet = useMemo(() => !store.apiList ? [] : [\n    ...store.apiList.apiGateway.map(({ id, apiStage: stage, swagger, usagePlan }) => ({\n      url: `/apis/${id}/${stage}`,\n      title: `${swagger.info.title} - ${stage}`,\n      stage: `${stage}`,\n      searchable: prepareSearch(`${JSON.stringify(swagger)} ${JSON.stringify(usagePlan)} ${stage}`).join(' ')\n    })),\n    ...store.apiList.generic.map(({ id, swagger, apiStage: stage }) => {\n      const api = {\n        url: `/apis/${id}`,\n        title: stage ? `${swagger.info.title} - ${stage}` : `${swagger.info.title}`,\n        searchable: prepareSearch(`${JSON.stringify(swagger)} ${stage || ''}`).join(' ')\n      }\n      if (stage) api.stage = stage\n      return api\n    })\n  ], [isLoaded]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateSearch = useMemo(() => _.debounce(setSearchQuery, 100, { leading: true }), [])\n\n  const results = useMemo(() => {\n    if (!searchQuery) return []\n    const prepared = prepareSearch(searchQuery)\n    if (!prepared.length) return prepared\n    return dataSet.filter(result => prepared.every(term => result.searchable.includes(term)))\n  }, [searchQuery, dataSet])\n\n  function handleSearchChange (e, { value }) {\n    setValue(value)\n    updateSearch(value)\n  }\n\n  return (\n    <PageWithSidebar\n      sidebarContent={<ApisMenu path={props.match} activateFirst={false} />}\n      SidebarPusherProps={{ className: 'swagger-section' }}\n    >\n      <Grid style={{ padding: '2em' }}>\n        <Grid.Column id='api-search'>\n          <Search\n            placeholder=\"Search for an API, stage, or any content in an API's definition.\"\n            onSearchChange={handleSearchChange}\n            results={results}\n            resultRenderer={(result) => (\n              <Menu.Item\n                as={Link}\n                to={result.url}\n                style={{ display: 'inline-block', width: '100%', height: '100%' }}\n              >\n                {result.title}\n              </Menu.Item>\n            )}\n            value={value}\n            {...props}\n          />\n        </Grid.Column>\n      </Grid>\n    </PageWithSidebar>\n  )\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport * as queryString from 'query-string'\n\n// content-fragments\nimport { loadFragments } from 'services/get-fragments'\n\n// semantic-ui\nimport 'semantic-ui-css/semantic.css'\n\n// pages\nimport Home from 'pages/Home'\nimport GettingStarted from 'pages/GettingStarted'\nimport Dashboard from 'pages/Dashboard'\nimport Apis from 'pages/Apis'\nimport { Admin } from 'pages/Admin'\n\n// components\nimport AlertPopup from 'components/AlertPopup'\nimport GlobalModal from 'components/Modal'\nimport NavBar from 'components/NavBar'\nimport Feedback from './components/Feedback'\nimport ApiSearch from './components/ApiSearch'\n\nimport { isAdmin, isRegistered, init, login, logout } from 'services/self'\nimport './index.css'\n\nloadFragments()\n\n// TODO: Feedback should be enabled if\n// the following is true && the current\n// user is not an administrator\nconst feedbackEnabled = window.config.feedbackEnabled\n\nexport const RegisteredRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      isRegistered()\n        ? <Component {...props} />\n        : <Redirect to='/' />\n    )}\n  />\n)\n\nexport const AdminRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest} render={props => (\n      isAdmin()\n        ? <Component {...props} />\n        : <Redirect to='/' />\n    )}\n  />\n)\n\n// To shut up a dev warning\nconst HomeWrap = props => <Home {...props} />\nconst GettingStartedWrap = props => <GettingStarted {...props} />\nconst DashboardWrap = props => <Dashboard {...props} />\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    init()\n\n    // We are using an S3 redirect rule to prefix the url path with #!\n    // This then converts it back to a URL path for React routing\n    if (window.location.hash && window.location.hash[1] === '!') {\n      const hashRoute = window.location.hash.substring(2)\n      window.history.pushState({}, 'home page', hashRoute)\n    }\n  }\n\n  render () {\n    return (\n      <BrowserRouter>\n        <>\n          <NavBar />\n          <GlobalModal />\n          <Switch>\n            <Route exact path='/' component={HomeWrap} />\n            <Route\n              exact\n              path='/index.html'\n              component={() => {\n                const { action } = queryString.parse(window.location.search)\n                if (action === 'login') {\n                  login()\n                } else if (action === 'logout') {\n                  logout()\n                }\n                return <Redirect to='/' />\n              }}\n            />\n            <Route path='/getting-started' component={GettingStartedWrap} />\n            <RegisteredRoute path='/dashboard' component={DashboardWrap} />\n            <AdminRoute path='/admin' component={Admin} />\n            <Route exact path='/apis' component={Apis} />\n            <Route exact path='/apis/search' component={ApiSearch} />\n            <Route exact path='/apis/:apiId' component={Apis} />\n            <Route path='/apis/:apiId/:stage' component={Apis} />\n            <Route path='/login' render={() => { login(); return <Redirect to='/' /> }} />\n            <Route path='/logout' render={() => { logout(); return <Redirect to='/' /> }} />\n            <Route component={() => <h2>Page not found</h2>} />\n          </Switch>\n          {feedbackEnabled && <Feedback />}\n          <AlertPopup />\n        </>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"AccountsTable_headerRow__miKSu\"};"],"sourceRoot":""}